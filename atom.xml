<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Honey</title>
  
  
  <link href="https://zhanghuaxiao.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhanghuaxiao.github.io/"/>
  <updated>2021-09-01T03:35:49.892Z</updated>
  <id>https://zhanghuaxiao.github.io/</id>
  
  <author>
    <name>Honey</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>跨浏览器窗口,7种方式</title>
    <link href="https://zhanghuaxiao.github.io/2021/09/01/%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3-7%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://zhanghuaxiao.github.io/2021/09/01/%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3-7%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2021-09-01T00:26:58.000Z</published>
    <updated>2021-09-01T03:35:49.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>跨浏览器窗口,7种方式 </p></blockquote><span id="more"></span><h4 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h4><pre><code>模拟聊天室</code></pre><p>服务端代码<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> WebSocket = <span class="built_in">require</span>(<span class="string">&#x27;ws&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = <span class="keyword">new</span> WebSocket.Server(&#123;</span><br><span class="line"><span class="attr">port</span>: <span class="number">8080</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&#x27;open&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;connected&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&#x27;close&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;disconnected&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.on(<span class="string">&#x27;connection&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="title">connection</span>(<span class="params">ws, req</span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> ip = req.connection.remoteAddress;</span><br><span class="line"><span class="keyword">const</span> port = req.connection.remotePort;</span><br><span class="line"><span class="keyword">const</span> clientName = ip + port;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%s is connected&#x27;</span>, clientName)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送欢迎信息给客户端</span></span><br><span class="line">ws.send(<span class="string">&quot;Welcome &quot;</span> + clientName);</span><br><span class="line"></span><br><span class="line">ws.on(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="title">incoming</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;received: %s from %s&#x27;</span>, message, clientName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 广播消息给所有客户端</span></span><br><span class="line">    server.clients.forEach(<span class="function"><span class="keyword">function</span> <span class="title">each</span>(<span class="params">client</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (client.readyState === WebSocket.OPEN) &#123;</span><br><span class="line">        client.send(clientName + <span class="string">&quot; -&gt; &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>客户端的实现<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;WebSocket Chat&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var socket;</span><br><span class="line">        if (!window.WebSocket) &#123;</span><br><span class="line">            window.WebSocket = window.MozWebSocket;</span><br><span class="line">        &#125;</span><br><span class="line">        if (window.WebSocket) &#123;</span><br><span class="line">            socket = new WebSocket(&quot;ws://localhost:8080/ws&quot;);</span><br><span class="line">            socket.onmessage = function (event) &#123;</span><br><span class="line">                var ta = document.getElementById(&#x27;responseText&#x27;);</span><br><span class="line">                ta.value = ta.value + &#x27;\n&#x27; + event.data</span><br><span class="line">            &#125;;</span><br><span class="line">            socket.onopen = function (event) &#123;</span><br><span class="line">                var ta = document.getElementById(&#x27;responseText&#x27;);</span><br><span class="line">                ta.value = &quot;连接开启!&quot;;</span><br><span class="line">            &#125;;</span><br><span class="line">            socket.onclose = function (event) &#123;</span><br><span class="line">                var ta = document.getElementById(&#x27;responseText&#x27;);</span><br><span class="line">                ta.value = ta.value + &quot;连接被关闭&quot;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            alert(&quot;你的浏览器不支持 WebSocket！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function send(message) &#123;</span><br><span class="line">            if (!window.WebSocket) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (socket.readyState == WebSocket.OPEN) &#123;</span><br><span class="line">                socket.send(message);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                alert(&quot;连接没有开启.&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;form onsubmit=&quot;return false;&quot;&gt;</span><br><span class="line">        &lt;h3&gt;WebSocket 聊天室：&lt;/h3&gt;</span><br><span class="line">        &lt;textarea id=&quot;responseText&quot; style=&quot;width: 500px; height: 300px;&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;message&quot; style=&quot;width: 300px&quot; value=&quot;您好&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;发送消息&quot; onclick=&quot;send(this.form.message.value)&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; onclick=&quot;javascript:document.getElementById(&#x27;responseText&#x27;).value=&#x27;&#x27;&quot; value=&quot;清空聊天记录&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><h4 id="定时器-客户端存储"><a href="#定时器-客户端存储" class="headerlink" title="定时器 + 客户端存储"></a>定时器 + 客户端存储</h4><h4 id="postMessage"><a href="#postMessage" class="headerlink" title="postMessage"></a>postMessage</h4><h4 id="StorageEvent"><a href="#StorageEvent" class="headerlink" title="StorageEvent"></a>StorageEvent</h4><pre><code>page1<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;message&#x27;</span>,<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;消息&#x27;</span>，</span><br><span class="line">    <span class="attr">from</span>: <span class="string">&#x27;Page 1&#x27;</span>,</span><br><span class="line">    <span class="attr">date</span>: <span class="built_in">Date</span>.now()</span><br><span class="line">&#125;))</span><br><span class="line"></span><br></pre></td></tr></table></figure>page2<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;message&#x27;</span>,<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;消息&#x27;</span>，</span><br><span class="line">    <span class="attr">from</span>: <span class="string">&#x27;Page 1&#x27;</span>,</span><br><span class="line">    <span class="attr">date</span>: <span class="built_in">Date</span>.now()</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure></code></pre><h4 id="BroadcastChannel"><a href="#BroadcastChannel" class="headerlink" title="BroadcastChannel"></a>BroadcastChannel</h4><pre><code>page1<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> channel = <span class="keyword">new</span> BroadcastChannel(<span class="string">&quot;channel-BroadcastChannel&quot;</span>);</span><br><span class="line">channel.postMessage(<span class="string">&#x27;Hello, BroadcastChannel!&#x27;</span>)</span><br></pre></td></tr></table></figure>page2<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> channel = <span class="keyword">new</span> BroadcastChannel(<span class="string">&quot;channel-BroadcastChannel&quot;</span>);</span><br><span class="line">channel.addEventListener(<span class="string">&quot;message&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ev.data)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></code></pre><h4 id="SharedWorker"><a href="#SharedWorker" class="headerlink" title="SharedWorker"></a>SharedWorker</h4><blockquote><p>我们可以在浏览器地址栏里面输入 `chrome://inspect，然后在侧边栏选中shared workers了，就可以看到浏览器，目前在运行的所有worker。点击inspect会打开一个开发者工具，然后就可以看到输出的log了<br>注意：如果要使 SharedWorker 连接到多个不同的页面，这些页面必须是同源的（相同的协议、host 以及端口）。<br>    worker.js<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> portList = [];</span><br><span class="line"></span><br><span class="line">onconnect = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;e&#x27;</span>, e)</span><br><span class="line">    <span class="keyword">var</span> port = e.ports[<span class="number">0</span>];</span><br><span class="line">    ensurePorts(port);</span><br><span class="line">    port.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = e.data;</span><br><span class="line">        disptach(port, data);</span><br><span class="line">    &#125;;</span><br><span class="line">    port.start();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 创建所有workder</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ensurePorts</span>(<span class="params">port</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (portList.indexOf(port) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        portList.push(port);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送其他页面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">disptach</span>(<span class="params">selfPort, data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;portList&#x27;</span>, portList)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;selfPort&#x27;</span>, selfPort)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;data&#x27;</span>, data)</span><br><span class="line">    portList</span><br><span class="line">        .filter(<span class="function"><span class="params">port</span> =&gt;</span> selfPort !== port)</span><br><span class="line">        .forEach(<span class="function"><span class="params">port</span> =&gt;</span> port.postMessage(data));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>    page1<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>BroadcastChannel Page 1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Page 1<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:50px; text-align: center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;inputMessage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;page 1的测试消息&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送消息&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btnSend&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;messages&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>收到的消息：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./worker.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> messagesEle = <span class="built_in">document</span>.getElementById(<span class="string">&quot;messages&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> messageEl = <span class="built_in">document</span>.getElementById(<span class="string">&quot;inputMessage&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> btnSend = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btnSend&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">if</span> (!<span class="built_in">window</span>.SharedWorker) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        alert(<span class="string">&quot;浏览器不支持SharedWorkder!&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> myWorker = <span class="keyword">new</span> SharedWorker(<span class="string">&quot;./worker.js&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 监听数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(<span class="string">&#x27;page1&#x27;</span>, e)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> msgEl = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> data = e.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        msgEl.innerText = data.date + <span class="string">&quot; &quot;</span> + data.from + <span class="string">&quot;:&quot;</span> + data.message;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        messagesEle.appendChild(msgEl);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        btnSend.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> message = messageEl.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 发送数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.postMessage(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString(),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            message,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">from</span>: <span class="string">&quot;page 1&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.start();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>    page2<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>BroadcastChannel Page 1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Page 2<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:50px; text-align: center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;inputMessage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;page 1的测试消息&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送消息&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btnSend&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;messages&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>收到的消息：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./worker.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> messagesEle = <span class="built_in">document</span>.getElementById(<span class="string">&quot;messages&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> messageEl = <span class="built_in">document</span>.getElementById(<span class="string">&quot;inputMessage&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">var</span> btnSend = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btnSend&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">if</span> (!<span class="built_in">window</span>.SharedWorker) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        alert(<span class="string">&quot;浏览器不支持SharedWorkder!&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> myWorker = <span class="keyword">new</span> SharedWorker(<span class="string">&quot;./worker.js&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(<span class="string">&#x27;page2&#x27;</span>, e)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> msgEl = <span class="built_in">document</span>.createElement(<span class="string">&quot;p&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> data = e.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        msgEl.innerText = data.date + <span class="string">&quot; &quot;</span> + data.from + <span class="string">&quot;:&quot;</span> + data.message;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        messagesEle.appendChild(msgEl);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        btnSend.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> message = messageEl.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> message = messageEl.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.postMessage(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">date</span>: <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString(),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            message,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">from</span>: <span class="string">&quot;page 2&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        myWorker.port.start();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="MessageChannel"><a href="#MessageChannel" class="headerlink" title="MessageChannel"></a>MessageChannel</h4>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;跨浏览器窗口,7种方式 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="跨浏览器窗口,7种方式" scheme="https://zhanghuaxiao.github.io/tags/%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AA%97%E5%8F%A3-7%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Vue-router核心原理</title>
    <link href="https://zhanghuaxiao.github.io/2021/08/17/Vue-router%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/"/>
    <id>https://zhanghuaxiao.github.io/2021/08/17/Vue-router%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</id>
    <published>2021-08-17T10:32:29.000Z</published>
    <updated>2021-08-26T09:56:32.591Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>知其然知其所以然 </p></blockquote><span id="more"></span><p>可以使用以下代码替代vue-router进行学习</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//myVueRouter.js</span></span><br><span class="line"><span class="keyword">let</span> Vue = <span class="literal">null</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HistoryRoute</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.current = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VueRouter</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mode = options.mode || <span class="string">&quot;hash&quot;</span></span><br><span class="line">        <span class="built_in">this</span>.routes = options.routes || [] <span class="comment">//你传递的这个路由是一个数组表</span></span><br><span class="line">        <span class="built_in">this</span>.routesMap = <span class="built_in">this</span>.createMap(<span class="built_in">this</span>.routes)</span><br><span class="line">        <span class="built_in">this</span>.history = <span class="keyword">new</span> HistoryRoute();</span><br><span class="line">        <span class="built_in">this</span>.init()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.mode === <span class="string">&quot;hash&quot;</span>)&#123;</span><br><span class="line">            <span class="comment">// 先判断用户打开时有没有hash值，没有的话跳转到#/</span></span><br><span class="line">            location.hash? <span class="string">&#x27;&#x27;</span>:location.hash = <span class="string">&quot;/&quot;</span>;</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">&quot;load&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.history.current = location.hash.slice(<span class="number">1</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">&quot;hashchange&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.history.current = location.hash.slice(<span class="number">1</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            location.pathname? <span class="string">&#x27;&#x27;</span>:location.pathname = <span class="string">&quot;/&quot;</span>;</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;load&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.history.current = location.pathname</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">&quot;popstate&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.history.current = location.pathname</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">createMap</span>(<span class="params">routes</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> routes.reduce(<span class="function">(<span class="params">pre,current</span>)=&gt;</span>&#123;</span><br><span class="line">            pre[current.path] = current.component</span><br><span class="line">            <span class="keyword">return</span> pre;</span><br><span class="line">        &#125;,&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">VueRouter.install = <span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span><br><span class="line">    Vue = v;</span><br><span class="line">    Vue.mixin(&#123;</span><br><span class="line">        <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.$options &amp;&amp; <span class="built_in">this</span>.$options.router)&#123; <span class="comment">// 如果是根组件</span></span><br><span class="line">                <span class="built_in">this</span>._root = <span class="built_in">this</span>; <span class="comment">//把当前实例挂载到_root上</span></span><br><span class="line">                <span class="built_in">this</span>._router = <span class="built_in">this</span>.$options.router;</span><br><span class="line">                Vue.util.defineReactive(<span class="built_in">this</span>,<span class="string">&quot;xxx&quot;</span>,<span class="built_in">this</span>._router.history)</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123; <span class="comment">//如果是子组件</span></span><br><span class="line">                <span class="built_in">this</span>._root= <span class="built_in">this</span>.$parent &amp;&amp; <span class="built_in">this</span>.$parent._root</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">Object</span>.defineProperty(<span class="built_in">this</span>,<span class="string">&#x27;$router&#x27;</span>,&#123;</span><br><span class="line">                <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._root._router</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="built_in">Object</span>.defineProperty(<span class="built_in">this</span>,<span class="string">&#x27;$route&#x27;</span>,&#123;</span><br><span class="line">                <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._root._router.history.current</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    Vue.component(<span class="string">&#x27;router-link&#x27;</span>,&#123;</span><br><span class="line">        <span class="attr">props</span>:&#123;</span><br><span class="line">            <span class="attr">to</span>:<span class="built_in">String</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="title">render</span>(<span class="params">h</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> mode = <span class="built_in">this</span>._self._root._router.mode;</span><br><span class="line">            <span class="keyword">let</span> to = mode === <span class="string">&quot;hash&quot;</span>?<span class="string">&quot;#&quot;</span>+<span class="built_in">this</span>.to:<span class="built_in">this</span>.to</span><br><span class="line">            <span class="keyword">return</span> h(<span class="string">&#x27;a&#x27;</span>,&#123;<span class="attr">attrs</span>:&#123;<span class="attr">href</span>:to&#125;&#125;,<span class="built_in">this</span>.$slots.default)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    Vue.component(<span class="string">&#x27;router-view&#x27;</span>,&#123;</span><br><span class="line">        <span class="function"><span class="title">render</span>(<span class="params">h</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> current = <span class="built_in">this</span>._self._root._router.history.current</span><br><span class="line">            <span class="keyword">let</span> routeMap = <span class="built_in">this</span>._self._root._router.routesMap;</span><br><span class="line">            <span class="keyword">return</span> h(routeMap[current])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> VueRouter</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;知其然知其所以然 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="Vue-router核心原理" scheme="https://zhanghuaxiao.github.io/tags/Vue-router%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>VUE中的inheritAttrs,attrs,listeners</title>
    <link href="https://zhanghuaxiao.github.io/2020/05/26/VUE%E4%B8%AD%E7%9A%84inheritAttrs-attrs-listeners/"/>
    <id>https://zhanghuaxiao.github.io/2020/05/26/VUE%E4%B8%AD%E7%9A%84inheritAttrs-attrs-listeners/</id>
    <published>2020-05-26T03:15:22.000Z</published>
    <updated>2020-05-26T04:29:50.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Vue中的inheritAttrs，$attrs，$listeners使用总结 </p></blockquote><span id="more"></span><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><blockquote><p>当你想向嵌套层级比较深组件数据传递，只能由父组件传递给子组件，子组件再传递给孙子组件,当传递十几个当情况，我们会在每个组件不停的props，每个必须写很多遍，除了vuex的父子组件通信，也可以通过inheritAttrs选项，以及实例属性$attrs</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">mytest</span>  <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:massgae</span>=<span class="string">&quot;massgae&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mytest</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">      data () &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="attr">title</span>:<span class="string">&#x27;title1111&#x27;</span>,</span><br><span class="line">          <span class="attr">massgae</span>:<span class="string">&#x27;message111&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="string">&#x27;mytest&#x27;</span>:&#123;</span><br><span class="line">          <span class="attr">template</span>:<span class="string">`&lt;div&gt;这是个h1标题&#123;&#123;title&#125;&#125;&lt;/div&gt;`</span>,</span><br><span class="line">          <span class="attr">props</span>:[<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">          <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">              <span class="attr">mag</span>:<span class="string">&#x27;111&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">created</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">this</span>.$attrs)<span class="comment">//注意这里</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>上边的代码，我们在组件里只是用了title这个属性，massgae属性我么是没有用的，那么下浏览器渲染出来是什么样呢？如下图：<br>  <img src="/img/7579449-9b4f591d793547b6.webp"><br>我们看到：组件内未被注册的属性将作为普通html元素属性被渲染，如果想让属性能够向下传递，即使prop组件没有被使用，你也需要在组件上注册。这样做会使组件预期功能变得模糊不清，同时也难以维护组件的DRY。在Vue2.4.0,可以在组件定义中添加inheritAttrs：false，组件将不会把未被注册的props呈现为普通的HTML属性。但是在组件里我们可以通过其$attrs可以获取到没有使用的注册属性，如果需要，我们在这也可以往下继续传递。<br>  如果我们在子组件里设置 inheritAttrs: false：</p></blockquote>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">components:&#123;</span><br><span class="line"><span class="string">&#x27;mytest&#x27;</span>:&#123;</span><br><span class="line">  <span class="attr">template</span>:<span class="string">`&lt;div&gt;这是个h1标题&#123;&#123;title&#125;&#125;&lt;/div&gt;`</span>,</span><br><span class="line">  <span class="attr">props</span>:[<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">  <span class="attr">inheritAttrs</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="attr">mag</span>:<span class="string">&#x27;111&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">created</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.$attrs)<span class="comment">//注意这里</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <img src="/img/7579449-a8a0b3970380eeeb.webp"><h1 id="attrs的使用"><a href="#attrs的使用" class="headerlink" title="$attrs的使用"></a>$attrs的使用</h1><p>  有一个页面由父组件，子组件，孙子组件构成，如下：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    &lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding:50px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">childcom</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span> <span class="attr">:sex</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;div&gt;&#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;grandcom v-bind=&quot;$attrs&quot;&gt;&lt;/grandcom&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">            &lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="string">&#x27;grandcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">template</span>:<span class="string">`&lt;div&gt;&#123;&#123;$attrs&#125;&#125;&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>上面的代码在页面的效果是如下图<br><img src="/img/7579449-b2ab8dfe80fe828d.webp"><br>如果attrs被绑定在子组件childcom上后，我们就可以在孙子组件grandcom里获取到this.$attrs的值。这个的值是父组件中传递下来的props（除了子组件childcom组件中props声明的）。</p><p>记住孙子组件grandcom里获取到this.$attrs的值是除了子组件childcom声明的元素！记住是除了子组件childcom声明的元素！例如上面的代码我在子组件childcom组件的props里声明了name，那么我在孙子组件grandcom里获取到的$attrs就不包含name属性，那么this.$attrs = { ‘age’:’30’, ‘sex’:’男’}。</p><h1 id="说一下-attrs的优势到底在哪"><a href="#说一下-attrs的优势到底在哪" class="headerlink" title="说一下$attrs的优势到底在哪"></a>说一下$attrs的优势到底在哪</h1><p>假如我们要做一个页面，有父组件，子组件，孙子组件，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">childcom</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;div&gt;我是子组件&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;grandcom&gt;&lt;/grandcom&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">            &lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="string">&#x27;grandcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">template</span>:<span class="string">`&lt;div&gt;我是孙子组件&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>如上代码，假如我想在子组件想获取到父组件的name属性值，在孙子组件获取父组件的age属性值，用props的话就必须在父组件把name和age的值通过props传递到子组件，子组件在通过props把age的值传递到孙子组件，到这里看明白了吧，孙子组件需要的age在子组件里没有用到，但是为了能让孙子组件获取到，你必须从父组件 传到子组件，在在子组件传递到孙子组件。</p><p>但是用$attrs就不用那么麻烦，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">childcom</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span> <span class="attr">:sex</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;div&gt;我是子组件   &#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;grandcom v-bind=&quot;$attrs&quot;&gt;&lt;/grandcom&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">            &lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="string">&#x27;grandcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">template</span>:<span class="string">`&lt;div&gt;我是孙子组件&#123;&#123;$attrs.age&#125;&#125;&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>子组件绑定了”$attrs”，孙子组件就能获取到除了name属性外所有由父组件传递下来的属性。如果孙子组件也想获取到name属性那么，在绑定个name如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;grandcom v-bind=<span class="string">&quot;$attrs&quot;</span> :name=<span class="string">&quot;name&quot;</span>&gt;&lt;/grandcom&gt;</span><br></pre></td></tr></table></figure><p>细细体会下是不是这个道理</p><h1 id="补充一下：inheritAttrs属性"><a href="#补充一下：inheritAttrs属性" class="headerlink" title="补充一下：inheritAttrs属性"></a>补充一下：inheritAttrs属性</h1><p>关于inheritAttrs这个属性跟获取到$attrs的值没有关系，inheritAttrs通常在编写基础组件时候会用到。官网原话：默认情况下父作用域的不被认作 props 的特性绑定 (attribute bindings) 将会“回退”且作为普通的 HTML 特性应用在子组件的根元素上。当撰写包裹一个目标元素或另一个组件的组件时，这可能不会总是符合预期行为。通过设置 inheritAttrs 到 false，这些默认行为将会被去掉。而通过 (同样是 2.4 新增的) 实例属性 $attrs 可以让这些特性生效，且可以通过 v-bind 显性的绑定到非根元素上。</p><p>注意：这个选项不影响 class 和 style 绑定。</p><p>在Vue2.4.0之前版本，组件内未被注册的属性将作为普通html元素属性被渲染。</p><p>inheritAttrs到底有啥用？到底用在哪里？看下边代码，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">childcom</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;input type=&quot;number&quot; style=&quot;border:1px solid blue&quot;&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上面代码你觉得input上会怎么显示？ 父组件传递了type=”text”，子组件里input 上type=”number”，那渲染到页面会是什么样？渲染图如下：<br><img src="/img/inheritAttrs2.webp"><br>看到没，父组件传递的type=”text”覆盖了input 上type=”number”，这岂不是把我的input数据类型都给改变了，这岂不是有问题，这不是我想要的！！！！看到这里明白了吗？回头去体会下上面官网的原话！！！</p><p>需求：我需要input 上type=”number”类型不变，但是我还是要取到父组件的type=”text”的值，那么代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">childcom</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">inheritAttrs</span>:<span class="literal">false</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;input type=&quot;number&quot; style=&quot;border:1px solid blue&quot;&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            created () &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.$attrs.type)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>页面渲染图如下：<br><img src="/img/inheritAttrs1.webp"></p><p>到这，我想大家都明白了inheritAttrs的作用了吧。默认情况下vue会把父作用域的不被认作 props 的特性绑定 且作为普通的 HTML 特性应用在子组件的根元素上。绑定就绑定，显示就显示，没啥大不了的，但是怕就怕遇到一些特殊的，就比如上面的input的情况，这个时候inheritAttrs:false的作用就出来啦。</p><h1 id="顺道补充一下：-listeners"><a href="#顺道补充一下：-listeners" class="headerlink" title="顺道补充一下：$listeners"></a>顺道补充一下：$listeners</h1><p>父组件-子组件-孙子组件，，，，现在我要你在孙子组件里改变父组件的值，怎么改？有很多方法啦，但是$listeners给我们提供了一个新的思路。话不多说，直接上代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">childcom</span> <span class="attr">:name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;age&quot;</span> <span class="attr">:sex</span>=<span class="string">&quot;sex&quot;</span> @<span class="attr">testChangeName</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">childcom</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;test&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;张三&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;30&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;sex&#x27;</span>:<span class="string">&#x27;男&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="string">&#x27;childcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;div&gt;我是子组件   &#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;grandcom v-bind=&quot;$attrs&quot; v-on=&quot;$listeners&quot;&gt;&lt;/grandcom&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">            &lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           </span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="string">&#x27;grandcom&#x27;</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">template</span>:<span class="string">`&lt;div&gt;我是孙子组件-------&lt;button @click=&quot;grandChangeName&quot;&gt;改变名字&lt;/button&gt;&lt;/div&gt;`</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="function"><span class="title">grandChangeName</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                           <span class="built_in">this</span>.$emit(<span class="string">&#x27;testChangeName&#x27;</span>,<span class="string">&#x27;kkkkkk&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">changeName</span>(<span class="params">val</span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.name = val</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>页面渲染如下：<br><img src="/img/inheritAttrs3.webp"><br>$listeners可以让你在孙子组件改变父组件的值，是不是很方便…………</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;Vue中的inheritAttrs，$attrs，$listeners使用总结 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="— Vue中inheritAttrs，$attrs，$listeners" scheme="https://zhanghuaxiao.github.io/tags/%E2%80%94-Vue%E4%B8%ADinheritAttrs%EF%BC%8C-attrs%EF%BC%8C-listeners/"/>
    
  </entry>
  
  <entry>
    <title>vue的functionnal使用</title>
    <link href="https://zhanghuaxiao.github.io/2020/05/25/vue%E7%9A%84functionnal%E4%BD%BF%E7%94%A8/"/>
    <id>https://zhanghuaxiao.github.io/2020/05/25/vue%E7%9A%84functionnal%E4%BD%BF%E7%94%A8/</id>
    <published>2020-05-25T07:19:48.000Z</published>
    <updated>2020-05-25T07:48:23.533Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>vue的functionnal使用 </p></blockquote><img src="/img/functionnal.gif" style="width:305px;heigth:277px"><span id="more"></span> Vue.js 组件提供了一个 functional 开关，设置为 true 后，就可以让组件变为无状态、无实例的函数化组件。因为只是函数，所以渲染的开销相对来说，较小。<p>函数化的组件中的 Render 函数，提供了第二个参数 context 作为上下文，data、props、slots、children 以及 parent 都可以通过 context 来访问。</p><p>1.新建一个functionnal.js（名字随意，只要是js文件）文件<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片组件设置</span></span><br><span class="line">  <span class="comment">// eslint-disable-next-line no-unused-vars</span></span><br><span class="line">  <span class="keyword">var</span> imgOptions = &#123;</span><br><span class="line">  <span class="attr">props</span>: [<span class="string">&quot;data&quot;</span>],</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params">createElement</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createElement(<span class="string">&quot;div&quot;</span>, [</span><br><span class="line">      createElement(<span class="string">&quot;p&quot;</span>, <span class="string">&quot;图片组件&quot;</span>),</span><br><span class="line">      createElement(<span class="string">&quot;img&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">attrs</span>: &#123;</span><br><span class="line">          <span class="attr">src</span>: <span class="built_in">this</span>.data.url,</span><br><span class="line">          <span class="attr">height</span>: <span class="number">300</span>,</span><br><span class="line">          <span class="attr">weight</span>: <span class="number">400</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    ]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//文字组件设置</span></span><br><span class="line"><span class="comment">// eslint-disable-next-line no-unused-vars</span></span><br><span class="line"><span class="keyword">var</span> textOptions = &#123;</span><br><span class="line">  <span class="attr">props</span>: [<span class="string">&quot;data&quot;</span>],</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params">createElement</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createElement(<span class="string">&quot;div&quot;</span>, [</span><br><span class="line">      createElement(<span class="string">&quot;p&quot;</span>, <span class="string">&quot;文本组件&quot;</span>),</span><br><span class="line">      createElement(<span class="string">&quot;span&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">attrs</span>: &#123;</span><br><span class="line">          <span class="attr">height</span>: <span class="number">300</span>,</span><br><span class="line">          <span class="attr">weight</span>: <span class="number">400</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="built_in">this</span>.data.content</span><br><span class="line">    ]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// eslint-disable-next-line no-unused-vars</span></span><br><span class="line"><span class="keyword">var</span> renderData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">functional</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params">createElement, &#123; data &#125;</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">    <span class="keyword">if</span> (data.attrs.data.type === <span class="string">&quot;text&quot;</span>) &#123;</span><br><span class="line">      renderData = textOptions;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.attrs.data.type === <span class="string">&quot;img&quot;</span>) &#123;</span><br><span class="line">      renderData = imgOptions;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> createElement(renderData, data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>2.例如在About.vue文件中使用<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>functionnal的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;log(&#x27;img&#x27;)&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;log(&#x27;text&#x27;)&quot;</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">functionalVue</span> <span class="attr">:data</span>=<span class="string">&quot;data&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">functionalVue</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> functionalVue <span class="keyword">from</span> <span class="string">&quot;./functionnal&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="attr">data</span>: &#123;&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    functionalVue</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">log</span>(<span class="params">type</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="keyword">if</span> (type === <span class="string">&quot;img&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.data = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">          <span class="attr">type</span>: type,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">          <span class="attr">url</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;http://pic-bucket.ws.126.net/photo/0001/2019-02-07/E7D8PON900AO0001NOS.jpg&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.data = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">          <span class="attr">type</span>: type,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">          <span class="attr">content</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;《流浪地球》中的科学：太阳何时吞并地球？科学家已经给出时间表&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">this</span>.data = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="attr">type</span>: <span class="string">&quot;text&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="attr">content</span>: <span class="string">&quot;《流浪地球》中的科学：太阳何时吞并地球？科学家已经给出时间表&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;vue的functionnal使用 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/img/functionnal.gif&quot; style=&quot;width:305px;heigth:277px&quot;&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="vue的functionnal使用" scheme="https://zhanghuaxiao.github.io/tags/vue%E7%9A%84functionnal%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何清除已设置的npm淘宝镜像</title>
    <link href="https://zhanghuaxiao.github.io/2020/05/19/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%B7%B2%E8%AE%BE%E7%BD%AE%E7%9A%84npm%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F/"/>
    <id>https://zhanghuaxiao.github.io/2020/05/19/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%B7%B2%E8%AE%BE%E7%BD%AE%E7%9A%84npm%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F/</id>
    <published>2020-05-19T08:03:49.000Z</published>
    <updated>2020-05-19T08:12:51.402Z</updated>
    
    <content type="html"><![CDATA[<p>1.设置淘宝的是：<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>2.不想用他们的，再设置回原来的就可以了：<br>npm config set registry <a href="https://registry.npmjs.org/">https://registry.npmjs.org</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.设置淘宝的是：&lt;br&gt;npm config set registry &lt;a href=&quot;https://registry.npm.taobao.org/&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.不想用他们的，再设置回原</summary>
      
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="如何清除已设置的npm淘宝镜像" scheme="https://zhanghuaxiao.github.io/tags/%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%B7%B2%E8%AE%BE%E7%BD%AE%E7%9A%84npm%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>nodeJs回顾记录</title>
    <link href="https://zhanghuaxiao.github.io/2019/11/25/nodeJs%E5%9B%9E%E9%A1%BE%E8%AE%B0%E5%BD%95/"/>
    <id>https://zhanghuaxiao.github.io/2019/11/25/nodeJs%E5%9B%9E%E9%A1%BE%E8%AE%B0%E5%BD%95/</id>
    <published>2019-11-25T06:11:50.000Z</published>
    <updated>2019-11-26T08:07:11.301Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时 </p></blockquote><img style="height: 176px;width: 50%;" src="/img/libuv.png"><span id="more"></span><ol><li><p><strong>在node_modules下的文件直接使用 require(‘nav’) 使用</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">node_modules下创建nav文件夹再创建nav.js</span><br><span class="line">//nav.js *** 主要使用nmp init -y 初始化 package.json文件中 &quot;main&quot;: &quot;nav.js&quot; ***</span><br><span class="line"></span><br><span class="line">    const str = &#x27;hello world come from nav.js&#x27;</span><br><span class="line">    module.exports = str</span><br><span class="line"></span><br><span class="line">//其他js文件</span><br><span class="line">    const nav = require(&#x27;nav&#x27;)</span><br><span class="line">    console.log(nav)  //hello world come from nav.js</span><br></pre></td></tr></table></figure></li><li><p><em><strong>常用的fs模块API使用</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&#x27;fs&#x27;)</span><br><span class="line"></span><br><span class="line">// 1. 异步读取文件</span><br><span class="line">fs.readFile(&#x27;./demo.txt&#x27;,function(err,fd)&#123;</span><br><span class="line">    if(err)&#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(fd.toString())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 2. 打开文件夹</span><br><span class="line">fs.open(&#x27;./demo.txt&#x27;,function(err,fd)&#123;</span><br><span class="line">    if(err)&#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(fd)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 3. 获取文件信息</span><br><span class="line">fs.stat(&#x27;./demo.txt&#x27;,function(err,fd)&#123;</span><br><span class="line">    if(err)&#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(fd.isFile())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 4. 写入文件</span><br><span class="line">fs.writeFile(&#x27;log.js&#x27;, &#x27;写入日志3&#x27;, function (err) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 5. 写入内容</span><br><span class="line">fs.appendFile(&#x27;./log.js&#x27;,&#x27;使用appendFile写入内容\n&#x27;,function(err)&#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;写入成功&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 6. 读取目录 把目录下面的文件和文件夹都获取到</span><br><span class="line">fs.readdir(&#x27;./src&#x27;,function(err,fl)&#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(fl)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 7. fs.rename 1.重命名 2.剪切</span><br><span class="line">fs.rename(&#x27;./src/rename.js&#x27;,&#x27;./src/rename1.js&#x27;,function(err,res)&#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;重命名成功&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line">fs.rename(&#x27;./src/index.html&#x27;,&#x27;./static/index.js&#x27;,function(err,re)&#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;剪切成功&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 8. fs.rmdir 删除目录</span><br><span class="line">fs.rmdir(&#x27;index.html&#x27;, function (err, re) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;删除目录成功&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//9. fs.unlink 删除文件</span><br><span class="line">fs.unlink(&#x27;index.html&#x27;, function (err, re) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#x27;删除文件成功&#x27;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>2.1 *** 练习（打印src下是目录的文件)***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    //因为是异步操作，所以使用递归加匿名函数自调解决</span><br><span class="line">    fs.readdir(&#x27;src&#x27;,function(err,files)&#123;</span><br><span class="line">    var allFile = []</span><br><span class="line">    if(err)&#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        (function a(i)&#123;</span><br><span class="line">            if(files.length == i)&#123;</span><br><span class="line">                console.log(allFile)</span><br><span class="line">                return false</span><br><span class="line">            &#125;</span><br><span class="line">            fs.stat(&#x27;src/&#x27;+files[i],function(err,fd)&#123;</span><br><span class="line">                if(fd.isDirectory())&#123;</span><br><span class="line">                    allFile.push(files[i])</span><br><span class="line">                &#125;</span><br><span class="line">                a(i+1)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li><p>*** 读入流、写入流和管道读取 ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&#x27;fs&#x27;);</span><br><span class="line"></span><br><span class="line">//文件读取流（就是一段段读取）</span><br><span class="line">var readStream = fs.createReadStream(&#x27;demo.txt&#x27;);</span><br><span class="line">var str = &#x27;&#x27;;</span><br><span class="line">var count = 0;</span><br><span class="line">readStream.on(&#x27;data&#x27;,function(chunk)&#123;</span><br><span class="line">    str += chunk;</span><br><span class="line">    count++;</span><br><span class="line">&#125;)</span><br><span class="line">readStream.on(&#x27;end&#x27;,function(chunk)&#123;</span><br><span class="line">    console.log(count)</span><br><span class="line">    console.log(str)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//文件写入流</span><br><span class="line">var writeStream = fs.createWriteStream(&#x27;input.txt&#x27;);</span><br><span class="line">var data = &#x27;使用createWriteStream流写入文件\n&#x27;</span><br><span class="line">//也可以使用for写入</span><br><span class="line">for(var i=0;i&lt;90;i++)&#123;</span><br><span class="line">    writeStream.write(data,&#x27;utf-8&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">writeStream.end(); //标记写入完成 能触发以下方法</span><br><span class="line">// 成功</span><br><span class="line">writeStream.on(&#x27;finish&#x27;,function()&#123;</span><br><span class="line">    console.log(&#x27;写入完成&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line">//失败</span><br><span class="line">writeStream.on(&#x27;error&#x27;,function()&#123;</span><br><span class="line">    console.log(&#x27;写入完成&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//读取一个文件内容写入到另一个文件中</span><br><span class="line">var readerStream = fs.createReadStream(&#x27;demo.txt&#x27;); //读取文件</span><br><span class="line">var writeStream = fs.createWriteStream(&#x27;input.txt&#x27;); //创建一个可写入流</span><br><span class="line">readerStream.pipe(writeStream)</span><br><span class="line">console.log(&#x27;程序执行完毕&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>*** 写一个简单的web服务器，可以根据输入同url返回相应的文件内容 ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">const http = require(&#x27;http&#x27;);</span><br><span class="line">const fs = require(&#x27;fs&#x27;);</span><br><span class="line">const path = require(&#x27;path&#x27;);</span><br><span class="line">const mime = require(&#x27;./static/model/mime&#x27;);</span><br><span class="line"></span><br><span class="line">http.createServer(function (req, res) &#123;</span><br><span class="line">    var pathname = req.url;</span><br><span class="line">    pathname == &#x27;/&#x27; ? pathname = &#x27;./index.html&#x27; : &quot;&quot;;</span><br><span class="line">    //获取文件的后缀名</span><br><span class="line">    let exname = path.extname(pathname)</span><br><span class="line">    if (pathname != &#x27;/favicon.ico&#x27;) &#123;</span><br><span class="line">        fs.readFile(&#x27;static/&#x27; + pathname, function (err, fd) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                return console.error(err)</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                var mimeName = mime.getMime(exname) //使用自己写的方法返回text-html,text-css等</span><br><span class="line">                res.writeHead(200, &#123;</span><br><span class="line">                    &quot;Content-Type&quot;: &quot;mimeName;chart=utf-8&quot;</span><br><span class="line">                &#125;)</span><br><span class="line">                res.end(fd)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).listen(8888)</span><br></pre></td></tr></table></figure></li><li><p>1 *** 使用回调函数解决异步问题 ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&#x27;fs&#x27;);</span><br><span class="line">console.log(1)</span><br><span class="line">function getMime(callback)&#123;</span><br><span class="line">    fs.readFile(&#x27;input.txt&#x27;,function(err,fd)&#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            return console.error(err)</span><br><span class="line">        &#125;</span><br><span class="line">        callback(fd)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">getMime(function(data)&#123;</span><br><span class="line">    console.log(data.toString())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>2 *** 使用nodejs自带的events方法解决异步问题 ***</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const fs = require(&#x27;fs&#x27;);</span><br><span class="line">const events = require(&#x27;events&#x27;);</span><br><span class="line"></span><br><span class="line">var EventEmitter = new events.EventEmitter();</span><br><span class="line"></span><br><span class="line">fs.readFile(&#x27;input.txt&#x27;, function (err, fd) &#123;</span><br><span class="line">    if (err) &#123;</span><br><span class="line">        return console.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    EventEmitter.emit(&#x27;to_parent&#x27;, fd)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">EventEmitter.on(&#x27;to_parent&#x27;, function (data) &#123;</span><br><span class="line">    console.log(data.toString())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;img style=&quot;height: 176px;width: 50%;&quot; src=&quot;/img/libuv.png&quot;&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="nodejs" scheme="https://zhanghuaxiao.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的$emit $on $once $off的使用</title>
    <link href="https://zhanghuaxiao.github.io/2019/08/23/vue%E7%9A%84-emit-on-once-off%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://zhanghuaxiao.github.io/2019/08/23/vue%E7%9A%84-emit-on-once-off%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2019-08-23T03:12:11.000Z</published>
    <updated>2019-08-23T03:27:30.015Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>最近的大事就是香港暴乱,做好自己就是对祖国的最好支持！ </p></blockquote><span id="more"></span><p>1.如果对以上方法还不了解的可以点击<a href="https://cn.vuejs.org/v2/api/#vm-on">传送门</a>大致了解一下😯<br>2.都说实践出真知，复制以下代码，动动小手点击下就全懂啦！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;msg&#125;&#125;&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">children-component</span> @<span class="attr">aa</span>=<span class="string">&quot;aa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">children-component</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeClick&quot;</span>&gt;</span>父组件按钮使用$off移除$on监听<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> bus = <span class="keyword">new</span> Vue()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> children = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">data</span>:<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="function"><span class="title">childrenClick</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        bus.$emit(<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;子组件通过emit发送过来的数据&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="function"><span class="title">hanldClick</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        bus.$emit(<span class="string">&#x27;bb&#x27;</span>,<span class="string">&#x27;子组件用来探索$once&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">template</span>:<span class="string">`&lt;div&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;button @click=&quot;childrenClick&quot;&gt;子组件使用$emit发送数据，父组件使用$on监听&lt;/button&gt;&lt;br/&gt;&lt;br/&gt; </span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">                &lt;button @click=&quot;hanldClick&quot;&gt;子组件使用$emit发送数据，父组件使用$once监听只能触发一次&lt;/button&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript"><span class="xml">            &lt;/div&gt;`</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">msg</span>:<span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">components</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="string">&#x27;children-component&#x27;</span>:children</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="function"><span class="title">aa</span>(<span class="params">s</span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(s)  </span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="function"><span class="title">removeClick</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    bus.$off(<span class="string">&#x27;aa&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                bus.$on(<span class="string">&#x27;aa&#x27;</span>,<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.msg = val</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.count++</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                bus.$once(<span class="string">&#x27;bb&#x27;</span>,<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(val)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;最近的大事就是香港暴乱,做好自己就是对祖国的最好支持！ &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="vue中$emit/$on/$once/$off的使用" scheme="https://zhanghuaxiao.github.io/tags/vue%E4%B8%AD-emit-on-once-off%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>在mac appstor下载软件提示内存不足问题</title>
    <link href="https://zhanghuaxiao.github.io/2019/08/15/%E5%9C%A8mac%20app%20store%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://zhanghuaxiao.github.io/2019/08/15/%E5%9C%A8mac%20app%20store%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6%E6%8F%90%E7%A4%BA%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98/</id>
    <published>2019-08-15T02:04:03.000Z</published>
    <updated>2019-08-23T06:13:51.470Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>日积月累 </p></blockquote><span id="more"></span><p>time machine搞的鬼。你原来空间不足时，但time machine存储的是你的“过去”你只禁用掉time machine，再删除time machine时间点就可以了，另外可以运行电脑一两天，也有可能就好了。你在关于存储空间中显示的不是真实值，用df -h查看才是真实的。只要运行sudo tmutil listlocalsnapshots /查看有还存储了那些time machine，再用下面的命令删除掉就可以了。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;日积月累 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="用机小技巧" scheme="https://zhanghuaxiao.github.io/categories/%E7%94%A8%E6%9C%BA%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo的基本操作</title>
    <link href="https://zhanghuaxiao.github.io/2019/07/09/hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>https://zhanghuaxiao.github.io/2019/07/09/hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2019-07-09T08:36:44.000Z</published>
    <updated>2019-08-23T06:18:49.990Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>记录一下hexo的基本操作 </p></blockquote><span id="more"></span><blockquote><p>hexo clean =&gt; hexo s =&gt; 创建 hexo new “title”</p></blockquote><blockquote><p>hexo clean（清除） =&gt; hexo g（生成） =&gt; gulp（压缩打包） =&gt; hexo d（部署git）</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;记录一下hexo的基本操作 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="hexo的使用" scheme="https://zhanghuaxiao.github.io/categories/hexo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="hexo的基本操作" scheme="https://zhanghuaxiao.github.io/tags/hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Vue双向绑定实现原理</title>
    <link href="https://zhanghuaxiao.github.io/2019/07/09/Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>https://zhanghuaxiao.github.io/2019/07/09/Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</id>
    <published>2019-07-09T07:22:16.000Z</published>
    <updated>2019-07-09T07:39:07.952Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>留下源码以便以后调试回忆 </p></blockquote><span id="more"></span><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span> &#123;&#123; text &#125;&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">obj, vm</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">Object</span>.keys(obj).forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            defineReactive(vm, key, obj[key]);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">defineReactive</span>(<span class="params">obj, key, val</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> dep = <span class="keyword">new</span> Dep();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">Object</span>.defineProperty(obj, key, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 添加订阅者 watcher 到主题对象 Dep</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (Dep.target) dep.addSub(Dep.target);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> val</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params">newVal</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (newVal === val) <span class="keyword">return</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            val = newVal;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 作为发布者发出通知</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            dep.notify();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">nodeToFragment</span>(<span class="params">node, vm</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> flag = <span class="built_in">document</span>.createDocumentFragment();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> child;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 理解了上面这一点，就能理解 while (child = node.firstChild) 这种用法</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 其次，appendChild 方法有个隐蔽的地方，就是调用以后 child 会从原来 DOM 中移除</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 所以，第二次循环时，node.firstChild 已经不再是之前的第一个子元素了</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">while</span> (child = node.firstChild) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            compile(child, vm);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            flag.appendChild(child); <span class="comment">// 将子节点劫持到文档片段中</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> flag</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">compile</span>(<span class="params">node, vm</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> reg = <span class="regexp">/\&#123;\&#123;(.*)\&#125;\&#125;/</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 节点类型为元素</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">if</span> (node.nodeType === <span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> attr = node.attributes;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 解析属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; attr.length; i++) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (attr[i].nodeName == <span class="string">&#x27;v-model&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">var</span> name = attr[i].nodeValue; <span class="comment">// 获取 v-model 绑定的属性名</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                node.addEventListener(<span class="string">&#x27;input&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="comment">// 给相应的 data 属性赋值，进而触发该属性的 set 方法</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                vm[name] = e.target.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                node.value = vm[name]; <span class="comment">// 将 data 的值赋给该 node</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                node.removeAttribute(<span class="string">&#x27;v-model&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">new</span> Watcher(vm, node, name, <span class="string">&#x27;input&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 节点类型为 text</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">if</span> (node.nodeType === <span class="number">3</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (reg.test(node.nodeValue)) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> name = <span class="built_in">RegExp</span>.$1; <span class="comment">// 获取匹配到的字符串</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            name = name.trim();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">new</span> Watcher(vm, node, name, <span class="string">&#x27;text&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">Watcher</span>(<span class="params">vm, node, name, nodeType</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Dep.target = <span class="built_in">this</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.name = name;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.node = node;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.vm = vm;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.nodeType = nodeType;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.update();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Dep.target = <span class="literal">null</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Watcher.prototype = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.get();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (<span class="built_in">this</span>.nodeType == <span class="string">&#x27;text&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.node.nodeValue = <span class="built_in">this</span>.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (<span class="built_in">this</span>.nodeType == <span class="string">&#x27;input&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.node.value = <span class="built_in">this</span>.value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 获取 data 中的属性值</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.value = <span class="built_in">this</span>.vm[<span class="built_in">this</span>.name]; <span class="comment">// 触发相应属性的 get</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">Dep</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.subs = []</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Dep.prototype = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">addSub</span>: <span class="function"><span class="keyword">function</span> (<span class="params">sub</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.subs.push(sub);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">notify</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.subs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">sub</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            sub.update();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">Vue</span>(<span class="params">options</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.data = options.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> data = <span class="built_in">this</span>.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        observe(data, <span class="built_in">this</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> id = options.el;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> dom = nodeToFragment(<span class="built_in">document</span>.getElementById(id), <span class="built_in">this</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 编译完成后，将 dom 返回到 app 中</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">document</span>.getElementById(id).appendChild(dom);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">el</span>: <span class="string">&#x27;app&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">text</span>: <span class="string">&#x27;hello world&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;留下源码以便以后调试回忆 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Vue双向绑定实现原理" scheme="https://zhanghuaxiao.github.io/tags/Vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Promise的使用</title>
    <link href="https://zhanghuaxiao.github.io/2019/05/31/Promise%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://zhanghuaxiao.github.io/2019/05/31/Promise%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2019-05-31T05:23:51.000Z</published>
    <updated>2019-05-31T06:37:20.254Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>温故而知新，可以为师矣 </p></blockquote><span id="more"></span><h1 id="ES6-Promise-用法讲解"><a href="#ES6-Promise-用法讲解" class="headerlink" title="ES6 Promise 用法讲解"></a>ES6 Promise 用法讲解</h1><p>Promise是一个构造函数，自己身上有all、reject、resolve这几个眼熟的方法，原型上有then、catch等同样很眼熟的方法。</p><h2 id="resolve参数（可以理解合格的内容）"><a href="#resolve参数（可以理解合格的内容）" class="headerlink" title="resolve参数（可以理解合格的内容）"></a>resolve参数（可以理解合格的内容）</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve,reject</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&quot;合格的内容&quot;</span>)</span><br><span class="line">        &#125;,<span class="number">2000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">先打印出了<span class="built_in">Promise</span> &#123;&lt;pending&gt;&#125;</span><br><span class="line">            <span class="attr">__proto__</span>: <span class="built_in">Promise</span></span><br><span class="line">            [[PromiseStatus]]: <span class="string">&quot;resolved&quot;</span></span><br><span class="line">            [[PromiseValue]]: <span class="string">&quot;合格的内容&quot;</span></span><br><span class="line">再过<span class="number">2</span>秒，打印出了<span class="string">&#x27;执行完成&#x27;</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="使用-then就可以获取resovle中的内容啦"><a href="#使用-then就可以获取resovle中的内容啦" class="headerlink" title="使用.then就可以获取resovle中的内容啦"></a>使用.then就可以获取resovle中的内容啦</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">     <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve,reject</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&quot;合格的内容&quot;</span>)</span><br><span class="line">        &#125;,<span class="number">2000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    p.then( <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(val)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="number">2</span>秒钟后就相继输出了 <span class="string">&quot;执行完成&quot;</span> <span class="string">&quot;合格的内容&quot;</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="resolve参数（可以理解不合格的内容）可以使用-catch获取它的内容"><a href="#resolve参数（可以理解不合格的内容）可以使用-catch获取它的内容" class="headerlink" title="resolve参数（可以理解不合格的内容）可以使用.catch获取它的内容"></a>resolve参数（可以理解不合格的内容）可以使用.catch获取它的内容</h2><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNumber</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> num = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random()*<span class="number">10</span>); <span class="comment">//生成1-10的随机数</span></span><br><span class="line">            <span class="keyword">if</span>(num&lt;=<span class="number">5</span>)&#123;</span><br><span class="line">                resolve(num);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                reject(<span class="string">&#x27;数字太大了&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line">getNumber().then( <span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val)</span><br><span class="line">&#125;).catch( <span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val)</span><br><span class="line">&#125;)</span><br><span class="line">如何满足<span class="keyword">if</span>条件，就输出相应数字，否则输出 reject中的<span class="string">&#x27;数字太大了&#x27;</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="all的用法"><a href="#all的用法" class="headerlink" title="all的用法"></a>all的用法</h2><blockquote><p>方法都调用完成再输出resolve中的内容<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//做一些异步操作</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务1执行完成&#x27;</span>);</span><br><span class="line">        resolve(<span class="string">&#x27;随便什么数据1&#x27;</span>);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务2执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&#x27;随便什么数据2&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务3执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&#x27;随便什么数据3&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Promise</span></span><br><span class="line">.all([runAsync1(),runAsync2(),runAsync3()])  <span class="comment">//时间短的先执行</span></span><br><span class="line">.then(<span class="function"><span class="keyword">function</span>(<span class="params">results</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(results);  <span class="comment">//返回值按照数据中方法顺序输出</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 异步任务3执行完成 异步任务1执行完成 异步任务2执行完成</span></span><br><span class="line"><span class="comment">// [&quot;随便什么数据1&quot;, &quot;随便什么数据2&quot;, &quot;随便什么数据3&quot;]</span></span><br></pre></td></tr></table></figure></p></blockquote><h2 id="race的用法"><a href="#race的用法" class="headerlink" title="race的用法"></a>race的用法</h2><blockquote><p>异步执行最快的函数以后，直接输出内容，再按照执行速度依次执行<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务1执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&#x27;随便什么数据1&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">3000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务2执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&#x27;随便什么数据2&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">3000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">runAsync3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//做一些异步操作</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;异步任务3执行完成&#x27;</span>);</span><br><span class="line">            resolve(<span class="string">&#x27;随便什么数据3&#x27;</span>);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> p;            </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Promise</span></span><br><span class="line">.race([runAsync1(), runAsync2(), runAsync3()])</span><br><span class="line">.then(<span class="function"><span class="keyword">function</span>(<span class="params">results</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(results);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//异步任务3执行完成 随便什么数据3 异步任务1执行完成 异步任务2执行完成</span></span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;温故而知新，可以为师矣 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="Promise的使用" scheme="https://zhanghuaxiao.github.io/tags/Promise%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue中slot的使用（通俗易懂）</title>
    <link href="https://zhanghuaxiao.github.io/2019/04/22/slot%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://zhanghuaxiao.github.io/2019/04/22/slot%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2019-04-22T06:27:23.000Z</published>
    <updated>2019-05-31T06:44:05.748Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>slot </p></blockquote><img src="/img/slot.jpeg" style="width:305px;heigth:277px">好久没更新博客啦，今天我又回来啦！<span id="more"></span># 为什么会出现插槽我们经常需要向一个组件传递内容，像这样：    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;alert-box&gt;</span><br><span class="line">    Something bad happened</span><br><span class="line">&lt;/alert-box&gt;</span><br></pre></td></tr></table></figure>但是现实却是很残酷，可能会给你来个Error!Something bad happened> 好啦，我们可以进入正题啦！😜    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">   <span class="xml"><span class="tag">&lt;<span class="name">childer-component</span> <span class="attr">:items</span>=<span class="string">&quot;items&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">h2</span>&gt;</span>单个插槽<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>只有在子组件使用单个插槽 slot 才能让我显示出来<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">h2</span>&gt;</span>多个插槽也叫具名插槽<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>one<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>two<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>第二个<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">h2</span>&gt;</span>作用域插槽（将子组件的值传到父组件供使用）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot-scope</span>=<span class="string">&quot;props&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; props.addr &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; props.cname &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; props.age &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;/<span class="name">childer-component</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    var childerComponent = Vue.component(&#x27;childer-component&#x27;,&#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        props:[&#x27;items&#x27;],</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        template:`</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是子组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>    </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;two&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>  </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:cname</span>=<span class="string">&quot;items[2].cname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:addr</span>=<span class="string">&quot;items[2].addr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">slot</span> <span class="attr">age</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        `</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    &#125;)</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    var vm = new Vue(&#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        el: &#x27;#app&#x27;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        data: &#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            items:[</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                &#123; text:&#x27;文字1&#x27; , cname:&#x27;tom&#x27; , addr:&#x27;usa&#x27; &#125;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                &#123; text:&#x27;文字2&#x27; , cname:&#x27;wangwu&#x27; , addr:&#x27;uk&#x27; &#125;,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                &#123; text:&#x27;文字3&#x27; , cname:&#x27;zhangsan&#x27; , addr:&#x27;un&#x27; &#125;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            ],</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            components:&#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">                &#x27;childerComponent&#x27;:childerComponent,</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">            &#125;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">        &#125;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    &#125;)</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;slot &lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/img/slot.jpeg&quot; style=&quot;width:305px;heigth:277px&quot;&gt;
好久没更新博客啦，今天我又回来啦！</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="slot的使用" scheme="https://zhanghuaxiao.github.io/tags/slot%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>探究call 和 apply 的原理</title>
    <link href="https://zhanghuaxiao.github.io/2019/02/18/%E6%8E%A2%E7%A9%B6call-%E5%92%8C-apply-%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>https://zhanghuaxiao.github.io/2019/02/18/%E6%8E%A2%E7%A9%B6call-%E5%92%8C-apply-%E7%9A%84%E5%8E%9F%E7%90%86/</id>
    <published>2019-02-18T06:40:01.000Z</published>
    <updated>2019-02-18T08:18:07.967Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>音乐🎵搭配学习更美味哦！</p></blockquote><img src="/img/callAndapply.jpg">建议看这片文章时可以点击[音乐🎵](https://music.163.com/#/song?id=1293886117)，来个单曲循，美滋滋<span id="more"></span># 先拿call开刀> 作用：call和apply都是替换函数内错误的this<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="attr">value</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.value) <span class="comment">// 如果不对this进行绑定执行bar() 会返回undefined</span></span><br><span class="line">&#125;</span><br><span class="line">b.call(a) <span class="comment">//1</span></span><br></pre></td></tr></table></figure><p>去除繁琐的讲解，一步到位自己模拟call的用法写一个函数，达到相同目的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> context = context || <span class="built_in">window</span>; <span class="comment">//当没传入值时候，就是指全局window</span></span><br><span class="line">    context.fn = <span class="built_in">this</span>; <span class="comment">//把调用myCall前的方法缓存下来</span></span><br><span class="line">    <span class="keyword">var</span> args = [...arguments].slice(<span class="number">1</span>);<span class="comment">//使用...打散传入值，并去除第一方法，得到一个数组</span></span><br><span class="line">    <span class="keyword">var</span> result = context.fn(...args);<span class="comment">//把数组打散，把dinging 18传入b方法中</span></span><br><span class="line">    <span class="keyword">delete</span> context.fn; <span class="comment">//删除</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="attr">value</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.value)</span><br><span class="line">    <span class="built_in">console</span>.log(name)</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;</span><br><span class="line">b.myCall(a,<span class="string">&quot;dingding&quot;</span>,<span class="number">18</span>)</span><br></pre></td></tr></table></figure><h2 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h2><blockquote><p>apply的方法和 call 方法的实现类似，只不过是如果有参数，以数组形式进行传递</p></blockquote><p>apply这个API平时使用的场景，代码如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="attr">value</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.value)</span><br><span class="line">    <span class="built_in">console</span>.log(name)</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;</span><br><span class="line">b.apply(a,[<span class="string">&quot;dingding&quot;</span>,<span class="number">18</span>])</span><br></pre></td></tr></table></figure><p>直接上模拟apply功能代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.myApply = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> context = context || <span class="built_in">window</span>;</span><br><span class="line">    context.fn = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">var</span> result;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">1</span>])&#123;</span><br><span class="line">        result = context.fn(...arguments[<span class="number">1</span>]) </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        result = context.fn()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> context.fn</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = &#123;</span><br><span class="line">    <span class="attr">value</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.value)</span><br><span class="line">    <span class="built_in">console</span>.log(name)</span><br><span class="line">    <span class="built_in">console</span>.log(age)</span><br><span class="line">&#125;</span><br><span class="line">b.myApply(a,[<span class="string">&quot;dingding&quot;</span>,<span class="number">18</span>])</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/92b48caee4b2">参考资料</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;音乐🎵搭配学习更美味哦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/img/callAndapply.jpg&quot;&gt;
建议看这片文章时可以点击[音乐🎵](https://music.163.com/#/song?id=1293886117)，来个单曲循，美滋滋</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="探究call 和 apply 的原理" scheme="https://zhanghuaxiao.github.io/tags/%E6%8E%A2%E7%A9%B6call-%E5%92%8C-apply-%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>图片懒加载</title>
    <link href="https://zhanghuaxiao.github.io/2019/02/14/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <id>https://zhanghuaxiao.github.io/2019/02/14/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</id>
    <published>2019-02-14T11:22:21.000Z</published>
    <updated>2019-02-18T06:37:24.293Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>LazyLoad </p></blockquote><img src="/img/lazyload.gif"><span id="more"></span># 懒加载的意义这里‘懒’的意思可以理解为延迟，如淘宝、京东这些电商平台有大量的图片，如果上来就加载服务器表示压力山大，所以就想出了懒加载这种克敌之法，用户滚动到的区域才发送请求加载内容# 原理将页面中的img标签src指向一张小照片或者为空都可以，然后写一个自定义属性比如（data-src）指向正确的图片，其实就是用正确的照片替换src里面的照片# 代码在写代码前，需要了解各种高度。先看这篇文章[js坐标位置](https://zhanghuaxiao.github.io/2019/02/14/js获取事件坐标位置/)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    &lt;head&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src=&quot;&quot; data-src=&quot;http://ww4.sinaimg.cn/large/006y8mN6gw1fa5obmqrmvj305k05k3yh.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://ww1.sinaimg.cn/large/006y8mN6gw1fa7kaed2hpj30sg0l9q54.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://imgsrc.baidu.com/imgad/pic/item/3c6d55fbb2fb43161361e1432ba4462309f7d389.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://pic.58pic.com/58pic/15/68/59/71X58PICNjx_1024.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://qimg.hxnews.com/2019/0128/1548663985785.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://imgsrc.baidu.com/imgad/pic/item/242dd42a2834349bf8d014a3c3ea15ce37d3bec6.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://imgsrc.baidu.com/imgad/pic/item/d439b6003af33a87089f4704cc5c10385343b53a.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://imgsrc.baidu.com/imgad/pic/item/38dbb6fd5266d01607666e0b9d2bd40735fa3591.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;&quot; data-src=&quot;http://imgsrc.baidu.com/imgad/pic/item/d043ad4bd11373f02f236d8cae0f4bfbfbed0480.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>## javascript<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>).length;</span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;img&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>; <span class="comment">//存储图片加载到的位置，避免每次都从第一张图片开始遍历</span></span><br><span class="line">lazyload(); <span class="comment">//页面载入完毕加载可是区域内的图片</span></span><br><span class="line"><span class="built_in">window</span>.onscroll = lazyload;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lazyload</span>(<span class="params"></span>) </span>&#123; <span class="comment">//监听页面滚动事件</span></span><br><span class="line">    <span class="keyword">var</span> seeHeight = <span class="built_in">document</span>.documentElement.clientHeight; <span class="comment">//可见区域高度</span></span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">//滚动条距离顶部高度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = n; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (img[i].offsetTop &lt; seeHeight + scrollTop) &#123;</span><br><span class="line">            <span class="keyword">if</span> (img[i].getAttribute(<span class="string">&quot;src&quot;</span>) == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                img[i].src = img[i].getAttribute(<span class="string">&quot;data-src&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            n = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>## 使用节流函数进行性能优化如果直接将函数绑定在scroll事件上，当页面滚动时，函数会被高频触发，这非常影响浏览器的性能。我想实现限制触发频率，来优化性能。<p>节流函数：只允许一个函数在N秒内执行一次。下面是一个通俗易通的节流函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>).length;</span><br><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;img&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>; <span class="comment">//存储图片加载到的位置，避免每次都从第一张图片开始遍历</span></span><br><span class="line">resizehandler(); <span class="comment">//页面载入完毕加载可是区域内的图片</span></span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resizehandler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> seeHeight = <span class="built_in">document</span>.documentElement.clientHeight; <span class="comment">//可见区域高度</span></span><br><span class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">//滚动条距离顶部高度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = n; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (img[i].offsetTop &lt; seeHeight + scrollTop) &#123;</span><br><span class="line">            <span class="keyword">if</span> (img[i].getAttribute(<span class="string">&quot;src&quot;</span>) == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                img[i].src = img[i].getAttribute(<span class="string">&quot;data-src&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            n = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">method,context</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(method.tId);</span><br><span class="line">    method.tId=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        method.call(context);</span><br><span class="line">    &#125;,<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onscroll=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    throttle(resizehandler,<span class="built_in">window</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    <h1 id="函数节流方案以下三种"><a href="#函数节流方案以下三种" class="headerlink" title="函数节流方案以下三种"></a>函数节流方案以下三种</h1><h2 id="时间戳方案"><a href="#时间戳方案" class="headerlink" title="时间戳方案"></a>时间戳方案</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> num = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>).length;</span><br><span class="line">    <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> n = <span class="number">0</span>; <span class="comment">//存储图片加载到的位置，避免每次都从第一张图片开始遍历</span></span><br><span class="line">    lazyload(); <span class="comment">//页面载入完毕加载可是区域内的图片</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">lazyload</span>(<span class="params"></span>) </span>&#123; <span class="comment">//监听页面滚动事件</span></span><br><span class="line">        <span class="keyword">var</span> seeHeight = <span class="built_in">document</span>.documentElement.clientHeight; <span class="comment">//可见区域高度</span></span><br><span class="line">        <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop; <span class="comment">//滚动条距离顶部高度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = n; i &lt; num; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (img[i].offsetTop &lt; seeHeight + scrollTop) &#123;</span><br><span class="line">                <span class="keyword">if</span> (img[i].getAttribute(<span class="string">&quot;src&quot;</span>) == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    img[i].src = img[i].getAttribute(<span class="string">&quot;data-src&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                n = i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">---------------------------------  以上代码不在重复  --------------------------------</span><br><span class="line">    <span class="keyword">var</span> throttle = <span class="function"><span class="keyword">function</span>(<span class="params">fun,delay</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> perv = <span class="built_in">Date</span>.now();</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> context = <span class="built_in">this</span>;</span><br><span class="line">            <span class="keyword">var</span> now = <span class="built_in">Date</span>.now();</span><br><span class="line">            <span class="keyword">if</span> (now-perv &gt;= delay)&#123;</span><br><span class="line">                fun.apply(context,<span class="built_in">arguments</span>)</span><br><span class="line">                prev = <span class="built_in">Date</span>.now();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,throttle(lazyload,<span class="number">1000</span>))</span><br></pre></td></tr></table></figure><h2 id="定时器方案"><a href="#定时器方案" class="headerlink" title="定时器方案"></a>定时器方案</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> throttle = <span class="function"><span class="keyword">function</span>(<span class="params">fun,delay</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(!timer)&#123;</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                fun.apply(context,<span class="built_in">arguments</span>)</span><br><span class="line">                timer = <span class="literal">null</span></span><br><span class="line">            &#125;,delay)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,throttle(lazyload,<span class="number">1000</span>))</span><br></pre></td></tr></table></figure><h2 id="时间戳-定时器方案"><a href="#时间戳-定时器方案" class="headerlink" title="时间戳+定时器方案"></a>时间戳+定时器方案</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> throttle = <span class="function"><span class="keyword">function</span>(<span class="params">fun,delay</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> startTime = <span class="built_in">Date</span>.now();</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> curTime = <span class="built_in">Date</span>.now();</span><br><span class="line">            <span class="keyword">var</span> remaining = delay - (curTime - startTime);</span><br><span class="line">            <span class="keyword">var</span> context = <span class="built_in">this</span>;</span><br><span class="line">            <span class="keyword">var</span> args = <span class="built_in">arguments</span>;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">            <span class="keyword">if</span> (remaining &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    fun.apply(context, args);</span><br><span class="line">                    startTime = <span class="built_in">Date</span>.now();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    timer = <span class="built_in">setTimeout</span>(fun, remaining);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,throttle(lazyload,<span class="number">1000</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;LazyLoad &lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/img/lazyload.gif&quot;&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="图片懒加载" scheme="https://zhanghuaxiao.github.io/tags/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    
    <category term="函数节流3种方式" scheme="https://zhanghuaxiao.github.io/tags/%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%813%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>js获取事件坐标位置</title>
    <link href="https://zhanghuaxiao.github.io/2019/02/14/js%E8%8E%B7%E5%8F%96%E4%BA%8B%E4%BB%B6%E5%9D%90%E6%A0%87%E4%BD%8D%E7%BD%AE/"/>
    <id>https://zhanghuaxiao.github.io/2019/02/14/js%E8%8E%B7%E5%8F%96%E4%BA%8B%E4%BB%B6%E5%9D%90%E6%A0%87%E4%BD%8D%E7%BD%AE/</id>
    <published>2019-02-14T09:21:15.000Z</published>
    <updated>2019-02-15T06:27:53.189Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>心有猛虎，细嗅蔷薇 </p></blockquote><span id="more"></span><h1 id="关于scrollTop-offsetTop-scrollLeft-offsetLeft用法介绍"><a href="#关于scrollTop-offsetTop-scrollLeft-offsetLeft用法介绍" class="headerlink" title="关于scrollTop,offsetTop,scrollLeft,offsetLeft用法介绍"></a>关于scrollTop,offsetTop,scrollLeft,offsetLeft用法介绍</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">页可见区域宽： <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line">网页可见区域高： <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">网页可见区域宽： <span class="built_in">document</span>.body.offsetWidth (包括边线的宽);</span><br><span class="line">网页可见区域高： <span class="built_in">document</span>.body.offsetHeight (包括边线的宽);</span><br><span class="line">网页正文全文宽： <span class="built_in">document</span>.body.scrollWidth;</span><br><span class="line">网页正文全文高： <span class="built_in">document</span>.body.scrollHeight;</span><br><span class="line">网页被卷去的高： <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">网页被卷去的左： <span class="built_in">document</span>.body.scrollLeft;</span><br><span class="line">网页正文部分上： <span class="built_in">window</span>.screenTop;</span><br><span class="line">网页正文部分左： <span class="built_in">window</span>.screenLeft;</span><br><span class="line">屏幕分辨率的高： <span class="built_in">window</span>.screen.height;</span><br><span class="line">屏幕分辨率的宽： <span class="built_in">window</span>.screen.width;</span><br><span class="line">屏幕可用工作区高度： <span class="built_in">window</span>.screen.availHeight;</span><br></pre></td></tr></table></figure><img src="/img/location.jpeg"><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="坐标事件"><a href="#坐标事件" class="headerlink" title="坐标事件"></a>坐标事件</h2><p>1.相对于显示屏左上角:e.screenX,e.screenY<br>2.相对于文档显示区左上角:e.clientX,e.clientY<br>3.相对于div左上角:e.offsetX,e.offsetY</p><hr><h2 id="页面滚动事件"><a href="#页面滚动事件" class="headerlink" title="页面滚动事件"></a>页面滚动事件</h2><p>window.onscroll  当页面滚动时触发<br>              获取滚动距离：document.body.scrollTop | |  document.documentElement.scrollTop<br>      主动控制页面的滚动位置：<br>            window.scrollTo（横向滚动到的位置，纵向滚动到的位置）<br>            window.scrollBy(横向滚动的距离，纵向滚动的距离)</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/qq_35430000/article/details/80277587">搞清clientHeight、offsetHeight、scrollHeight、offsetTop、scrollTop</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;心有猛虎，细嗅蔷薇 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="screenX/screenY" scheme="https://zhanghuaxiao.github.io/tags/screenX-screenY/"/>
    
    <category term="clientX/slientY" scheme="https://zhanghuaxiao.github.io/tags/clientX-slientY/"/>
    
    <category term="offsetX/offsetY" scheme="https://zhanghuaxiao.github.io/tags/offsetX-offsetY/"/>
    
  </entry>
  
  <entry>
    <title>深度学习之神经网络</title>
    <link href="https://zhanghuaxiao.github.io/2019/02/04/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B9%8B%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    <id>https://zhanghuaxiao.github.io/2019/02/04/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B9%8B%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</id>
    <published>2019-02-04T09:50:33.000Z</published>
    <updated>2019-02-05T12:43:57.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>今天是19年除夕夜</p></blockquote><span id="more"></span><h1 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h1><p><a href="https://www.imooc.com/video/18099">参考视频</a></p><h2 id="神经元————最小的神经网络"><a href="#神经元————最小的神经网络" class="headerlink" title="神经元————最小的神经网络"></a>神经元————最小的神经网络</h2><img src="/img/nerve.png"><img src="/img/nerve1.png"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>太枯燥看不下去了 😂</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;今天是19年除夕夜&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="深度学习" scheme="https://zhanghuaxiao.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="神经网络" scheme="https://zhanghuaxiao.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>区块链理论和代码演示</title>
    <link href="https://zhanghuaxiao.github.io/2019/02/03/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF/"/>
    <id>https://zhanghuaxiao.github.io/2019/02/03/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF/</id>
    <published>2019-02-03T13:28:21.000Z</published>
    <updated>2019-02-04T06:52:53.515Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>一场没有诗和远方，全是苟且的演讲</p></blockquote><p>无意间看晓说，他说5G对以后的影响，其中有个数据分发使用了比特币技术，对此查阅资料及视频进行学习，以下为个人总结</p><span id="more"></span><p>参考资料如何</p><ul><li><p><a href="https://v.youku.com/v_show/id_XMzk5Mzk3MjI4OA==.html?spm=a2h0j.11185381.listitem_page1.5!6~A&&s=6e782defbfbd0d4e11ef">晓说视频</a></p></li><li><p><a href="https://www.imooc.com/video/17059">讲解区块链原理视频</a></p></li><li><p><a href="https://www.imooc.com/video/17549">区块链代码实现视频</a></p></li><li><p><a href="https://github.com/ethereum/go-ethereum">以太坊开源代码</a> 以太坊（英文Ethereum）是一个开源的有智能合约功能的公共区块链平台，通过其专用加密货币以太币（Ether）提供去中心化的以太虚拟机（Ethereum Virtual Machine）来处理点对点合约。</p></li></ul><h2 id="区块链基本原型"><a href="#区块链基本原型" class="headerlink" title="区块链基本原型"></a>区块链基本原型</h2><ul><li>区块链本质就是 <strong>分布式数据库</strong></li><li>区块链是 <strong>公开的数据库</strong>，不是私人的数据库</li><li>区块链是加密货币和智能合约的基础</li></ul><h2 id="解决去中心问题"><a href="#解决去中心问题" class="headerlink" title="解决去中心问题"></a>解决去中心问题</h2><p>问：如何快速验证哪个数据才是正确的？<br>答：每次交易都记录 序号/时间戳/hash值，形成一个区块链，和其他区块进行对比</p><h2 id="如何确定使用权。"><a href="#如何确定使用权。" class="headerlink" title="如何确定使用权。"></a>如何确定使用权。</h2><p>问：账户所有权问题<br>    <img src="/img/ownership.png"><br>    <img src="/img/ownership1.png"><br>答：地址是用公钥通过hash值生成的，值再进行Base58进行编码的值,谁用这个地址支付，谁就拥有这个地址的所有权,谁有这个私钥，谁就能用这个地址支付，丢失私钥就是丢失使用权不能补办</p><h2 id="使用go语言模拟区块链技术基本原理"><a href="#使用go语言模拟区块链技术基本原理" class="headerlink" title="使用go语言模拟区块链技术基本原理"></a>使用go语言模拟区块链技术基本原理</h2><img src="/img/blockchain-basic-core.png"><h1 id="挖矿的本质"><a href="#挖矿的本质" class="headerlink" title="挖矿的本质"></a>挖矿的本质</h1><p>使用计算机计算，前面连续都是零的一串，记录交易信息的特殊的hash值生产的编码</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;一场没有诗和远方，全是苟且的演讲&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;无意间看晓说，他说5G对以后的影响，其中有个数据分发使用了比特币技术，对此查阅资料及视频进行学习，以下为个人总结&lt;/p&gt;</summary>
    
    
    
    <category term="区块链" scheme="https://zhanghuaxiao.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="区块链理论和代码演示" scheme="https://zhanghuaxiao.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%90%86%E8%AE%BA%E5%92%8C%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>Vuejs源码解析</title>
    <link href="https://zhanghuaxiao.github.io/2019/01/31/Vuejs%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    <id>https://zhanghuaxiao.github.io/2019/01/31/Vuejs%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</id>
    <published>2019-01-31T08:40:13.000Z</published>
    <updated>2019-02-13T09:39:56.343Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>除了使用vue工具，更想揭开神秘面纱,开始一场神秘之旅吧 </p></blockquote><span id="more"></span><p><a href="https://github.com/vuejs/vue/blob/dev/src/core/instance/index.js">vue.js源码地址</a></p><h1 id="看后感觉内容不错的参考资料"><a href="#看后感觉内容不错的参考资料" class="headerlink" title="看后感觉内容不错的参考资料"></a>看后感觉内容不错的参考资料</h1><p>1.<a href="http://hcysun.me/vue-design/art/2vue-constructor.html">Vue技术内幕</a></p><h1 id="从一个简单的example开始"><a href="#从一个简单的example开始" class="headerlink" title="从一个简单的example开始"></a>从一个简单的example开始</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;&#123;&#123;test&#125;&#125;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这段代码简单调用了<em>Vue</em>，传递了两个选项 <em>el</em> 和 <em>data</em>,这段代码在页面呈现的DOM如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;<span class="number">1</span>&lt;div&gt;</span><br></pre></td></tr></table></figure><h2 id="接下来我们看看上面的例子到底发生了什么？"><a href="#接下来我们看看上面的例子到底发生了什么？" class="headerlink" title="接下来我们看看上面的例子到底发生了什么？"></a>接下来我们看看上面的例子到底发生了什么？</h2><p>首先当我们使用Vue构造函数的时候，第一句执行的代码到底是什么，所以我们找到Vue的构造函数，Vue的构造函数在<em>core/instance/index.js</em><br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Vue</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span> &amp;&amp;</span><br><span class="line">        !(<span class="built_in">this</span> <span class="keyword">instanceof</span> Vue)</span><br><span class="line">    ) &#123;</span><br><span class="line">        warn(<span class="string">&#x27;Vue is a constructor and should be called with the `new` keyword&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>._init(options)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>上面的代码一目了然，当new Vue构造函数时，执行的第一句代码时this._init(options)方法，options参数内容是我们调用Vue构造函数传入的<br>    <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">options = &#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">test</span>:<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>既然如此我们就找到 <em>_init方法</em>，_init 方法在 src/core/instance/init.js 文件被添加到 Vue 的原型上，下面我们就看看 _init 做了什么。<br>_init 方法的一开始，是这两句代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm: Component = <span class="built_in">this</span></span><br><span class="line"><span class="comment">// a uid</span></span><br><span class="line">vm._uid = uid++</span><br></pre></td></tr></table></figure><p>首先声明了一个常量vm，并且在vm上添加了一个属性 <em>_uid</em>，uid的初始值是0每次实例化一个 Vue 实例之后，uid 的值都会 ++。</p><h2 id="接下去的代码如下"><a href="#接下去的代码如下" class="headerlink" title="接下去的代码如下"></a>接下去的代码如下</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> startTag, endTag</span><br><span class="line"><span class="comment">/* istanbul ignore if */</span></span><br><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span> &amp;&amp; config.performance &amp;&amp; mark) &#123;</span><br><span class="line">  startTag = <span class="string">`vue-perf-start:<span class="subst">$&#123;vm._uid&#125;</span>`</span></span><br><span class="line">  endTag = <span class="string">`vue-perf-end:<span class="subst">$&#123;vm._uid&#125;</span>`</span></span><br><span class="line">  mark(startTag)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先声明了startTag, endTag这两个参数(parameter)，其中if括号中的意思是：在非生产环境下，并且config.performance和mark都为真，才执行里面的代码，其中 config.performance 来自于 core/config.js 文件，我们知道，Vue.config 同样引用了这个对象，在 Vue 的官方文档中可以看到如下内容：<br><strong>Vue 提供了全局配置 Vue.config.performance，我们通过将其设置为 true，即可开启性能追踪</strong></p><h2 id="你可以追踪四个场景的性能"><a href="#你可以追踪四个场景的性能" class="headerlink" title="你可以追踪四个场景的性能"></a>你可以追踪四个场景的性能</h2><p>1、组件初始化(component init)<br>2、编译(compile)，将模板(template)编译成渲染函数<br>3、渲染(render)，其实就是渲染函数的性能，或者说渲染函数执行且生成虚拟DOM(vnode)的性能<br>4、打补丁(patch)，将虚拟DOM渲染为真实DOM的性能</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;除了使用vue工具，更想揭开神秘面纱,开始一场神秘之旅吧 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>vue中diff算法详解</title>
    <link href="https://zhanghuaxiao.github.io/2019/01/30/vue-diff%E7%AE%97%E6%B3%95/"/>
    <id>https://zhanghuaxiao.github.io/2019/01/30/vue-diff%E7%AE%97%E6%B3%95/</id>
    <published>2019-01-30T04:53:01.000Z</published>
    <updated>2019-02-14T07:15:32.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p><a href="https://zhanghuaxiao.github.io/2019/01/30/vue-source-code/">可以先看Vuejs运行机制</a></p></blockquote><span id="more"></span><h1 id="当数据发生变化时，vue是怎么更新节点的？"><a href="#当数据发生变化时，vue是怎么更新节点的？" class="headerlink" title="当数据发生变化时，vue是怎么更新节点的？"></a>当数据发生变化时，vue是怎么更新节点的？</h1><p>要知道渲染真实DOM的开销是很大的，比如有时候我们修改了某个数据，如果直接渲染到真实dom上会引起整个dom树的重绘和重排，有没有可能我们只更新我们修改的那一小块dom而不要更新整个dom呢？diff算法能够帮助我们。</p><p>我们先根据真实DOM生成一颗virtual DOM，当virtual DOM某个节点的数据改变后会生成一个新的Vnode，然后Vnode和oldVnode作对比，发现有不一样的地方就直接修改在真实的DOM上，然后使oldVnode的值为Vnode。</p><p>diff的过程就是调用名为patch的函数，比较新旧节点，一边比较一边给真实的DOM打补丁。</p><h1 id="virtual-DOM和真实DOM的区别？"><a href="#virtual-DOM和真实DOM的区别？" class="headerlink" title="virtual DOM和真实DOM的区别？"></a>virtual DOM和真实DOM的区别？</h1><p>virtual DOM是将真实的DOM的数据抽取出来，以对象的形式模拟树形结构。比如dom是这样的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div&gt;</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">对应的virtual DOM（伪代码）：</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> Vnode = &#123;</span><br><span class="line">        <span class="attr">tag</span>: <span class="string">&#x27;div&#x27;</span>,</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">            &#123; <span class="attr">tag</span>: <span class="string">&#x27;p&#x27;</span>, <span class="attr">text</span>: <span class="string">&#x27;123&#x27;</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>（温馨提示：VNode和oldVNode都是对象，一定要记住）</p><h1 id="diff的比较方式？"><a href="#diff的比较方式？" class="headerlink" title="diff的比较方式？"></a>diff的比较方式？</h1><p>在采取diff算法比较新旧节点的时候，比较只会在同层级进行, 不会跨层级比较。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>456<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上面的代码会分别比较同一层的两个div以及第二层的p和span，但是不会拿div和span作比较。在别处看到的一张很形象的图：<br><img src="/img/diff.png"></p><h1 id="diff流程图"><a href="#diff流程图" class="headerlink" title="diff流程图"></a>diff流程图</h1><p>当数据发生改变时，set方法会让调用Dep.notify通知所有订阅者Watcher，订阅者就会调用patch给真实的DOM打补丁，更新相应的视图<br><img src="/img/diff-diagram.png"></p><h1 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h1><p>patch<br>来看看patch是怎么打补丁的（代码只保留核心部分）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">patch</span> (<span class="params">oldVnode,vnode</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//some code</span></span><br><span class="line">    <span class="keyword">if</span>(sameVnode(oldVnode,vnode))&#123;</span><br><span class="line">        patchVnode(oldVnode,vnode)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> oEl = oldVnode.el   <span class="comment">//当前oldVnode对应的真实元素节点</span></span><br><span class="line">        <span class="keyword">let</span> parentEle = api.parentNode(oEl)   <span class="comment">//父元素</span></span><br><span class="line">        createEle(vnode)   <span class="comment">//根据Vnode生成新元素</span></span><br><span class="line">            <span class="keyword">if</span> (parentEle !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 将新元素添加进父元素    </span></span><br><span class="line">            api.insertBefore(parentEle, vnode.el, api.nextSibling(oEl)) </span><br><span class="line">            api.removeChild(parentEle, oldVnode.el)  <span class="comment">// 移除以前的旧元素节点</span></span><br><span class="line">            oldVnode = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// some code </span></span><br><span class="line">    <span class="keyword">return</span> vnode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>patch函数接收两个参数oldVnode和Vnode分别代表新的节点和之前的旧节点</p><p><em>判断两节点是否值得比较，值得比较则执行patchVnode</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sameVnode</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        a.key === b.key &amp;&amp;  <span class="comment">// key值</span></span><br><span class="line">        a.tag === b.tag &amp;&amp;  <span class="comment">// 标签名</span></span><br><span class="line">        a.isComment === b.isComment &amp;&amp;  <span class="comment">// 是否为注释节点</span></span><br><span class="line">        <span class="comment">// 是否都定义了data，data包含一些具体信息，例如onclick , style</span></span><br><span class="line">        isDef(a.data) === isDef(b.data) &amp;&amp;  </span><br><span class="line">        sameInputType(a, b) <span class="comment">// 当标签是&lt;input&gt;的时候，type必须相同</span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>不值得比较则用Vnode替换oldVnode</em><br>如果两个节点都是一样的，那么就深入检查他们的子节点。如果两个节点不一样那就说明Vnode完全被改变了，就可以直接替换oldVnode。</p><p>虽然这两个节点不一样但是他们的子节点一样怎么办？别忘了，diff可是逐层比较的，如果第一层不一样那么就不会继续深入比较第二层了。（我在想这算是一个缺点吗？相同子节点不能重复利用了…其实没这么简单，它利用闭包有个缓存机制）</p><h1 id="patchVnode"><a href="#patchVnode" class="headerlink" title="patchVnode"></a>patchVnode</h1><p>当我们确定两个节点值得比较之后我们会对两个节点指定patchVnode方法。那么这个方法做了什么呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    patchVnode (oldVnode, vnode) &#123;</span><br><span class="line">    <span class="keyword">const</span> el = vnode.el = oldVnode.el</span><br><span class="line">    <span class="keyword">let</span> i, oldCh = oldVnode.children, ch = vnode.children</span><br><span class="line">    <span class="keyword">if</span> (oldVnode === vnode) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> (oldVnode.text !== <span class="literal">null</span> &amp;&amp; vnode.text !== <span class="literal">null</span> &amp;&amp; oldVnode.text !== vnode.text) &#123;</span><br><span class="line">        api.setTextContent(el, vnode.text)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        updateEle(el, vnode, oldVnode)</span><br><span class="line">        <span class="keyword">if</span> (oldCh &amp;&amp; ch &amp;&amp; oldCh !== ch) &#123;</span><br><span class="line">            updateChildren(el, oldCh, ch)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ch)&#123;</span><br><span class="line">            createEle(vnode) <span class="comment">//create el&#x27;s children dom</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (oldCh)&#123;</span><br><span class="line">            api.removeChildren(el)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数做了以下事情：</p><p>找到对应的真实dom，称为el<br>判断Vnode和oldVnode是否指向同一个对象，如果是，那么直接return<br>如果他们都有文本节点并且不相等，那么将el的文本节点设置为Vnode的文本节点。<br>如果oldVnode有子节点而Vnode没有，则删除el的子节点<br>如果oldVnode没有子节点而Vnode有，则将Vnode的子节点真实化之后添加到el<br>如果两者都有子节点，则执行updateChildren函数比较子节点，这一步很重要<br>其他几个点都很好理解，我们详细来讲一下updateChildren</p><h1 id="updateChildren"><a href="#updateChildren" class="headerlink" title="updateChildren"></a>updateChildren</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">    updateChildren (parentElm, oldCh, newCh) &#123;</span><br><span class="line">    <span class="keyword">let</span> oldStartIdx = <span class="number">0</span>, newStartIdx = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> oldEndIdx = oldCh.length - <span class="number">1</span></span><br><span class="line">    <span class="keyword">let</span> oldStartVnode = oldCh[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> oldEndVnode = oldCh[oldEndIdx]</span><br><span class="line">    <span class="keyword">let</span> newEndIdx = newCh.length - <span class="number">1</span></span><br><span class="line">    <span class="keyword">let</span> newStartVnode = newCh[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> newEndVnode = newCh[newEndIdx]</span><br><span class="line">    <span class="keyword">let</span> oldKeyToIdx</span><br><span class="line">    <span class="keyword">let</span> idxInOld</span><br><span class="line">    <span class="keyword">let</span> elmToMove</span><br><span class="line">    <span class="keyword">let</span> before</span><br><span class="line">    <span class="keyword">while</span> (oldStartIdx &lt;= oldEndIdx &amp;&amp; newStartIdx &lt;= newEndIdx) &#123;</span><br><span class="line">        <span class="keyword">if</span> (oldStartVnode == <span class="literal">null</span>) &#123;   <span class="comment">// 对于vnode.key的比较，会把oldVnode = null</span></span><br><span class="line">            oldStartVnode = oldCh[++oldStartIdx] </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (oldEndVnode == <span class="literal">null</span>) &#123;</span><br><span class="line">            oldEndVnode = oldCh[--oldEndIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (newStartVnode == <span class="literal">null</span>) &#123;</span><br><span class="line">            newStartVnode = newCh[++newStartIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (newEndVnode == <span class="literal">null</span>) &#123;</span><br><span class="line">            newEndVnode = newCh[--newEndIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sameVnode(oldStartVnode, newStartVnode)) &#123;</span><br><span class="line">            patchVnode(oldStartVnode, newStartVnode)</span><br><span class="line">            oldStartVnode = oldCh[++oldStartIdx]</span><br><span class="line">            newStartVnode = newCh[++newStartIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sameVnode(oldEndVnode, newEndVnode)) &#123;</span><br><span class="line">            patchVnode(oldEndVnode, newEndVnode)</span><br><span class="line">            oldEndVnode = oldCh[--oldEndIdx]</span><br><span class="line">            newEndVnode = newCh[--newEndIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sameVnode(oldStartVnode, newEndVnode)) &#123;</span><br><span class="line">            patchVnode(oldStartVnode, newEndVnode)</span><br><span class="line">            api.insertBefore(parentElm, oldStartVnode.el, api.nextSibling(oldEndVnode.el))</span><br><span class="line">            oldStartVnode = oldCh[++oldStartIdx]</span><br><span class="line">            newEndVnode = newCh[--newEndIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sameVnode(oldEndVnode, newStartVnode)) &#123;</span><br><span class="line">            patchVnode(oldEndVnode, newStartVnode)</span><br><span class="line">            api.insertBefore(parentElm, oldEndVnode.el, oldStartVnode.el)</span><br><span class="line">            oldEndVnode = oldCh[--oldEndIdx]</span><br><span class="line">            newStartVnode = newCh[++newStartIdx]</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 使用key时的比较</span></span><br><span class="line">            <span class="keyword">if</span> (oldKeyToIdx === <span class="literal">undefined</span>) &#123;</span><br><span class="line">                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx) <span class="comment">// 有key生成index表</span></span><br><span class="line">            &#125;</span><br><span class="line">            idxInOld = oldKeyToIdx[newStartVnode.key]</span><br><span class="line">            <span class="keyword">if</span> (!idxInOld) &#123;</span><br><span class="line">                api.insertBefore(parentElm, createEle(newStartVnode).el, oldStartVnode.el)</span><br><span class="line">                newStartVnode = newCh[++newStartIdx]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                elmToMove = oldCh[idxInOld]</span><br><span class="line">                <span class="keyword">if</span> (elmToMove.sel !== newStartVnode.sel) &#123;</span><br><span class="line">                    api.insertBefore(parentElm, createEle(newStartVnode).el, oldStartVnode.el)</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    patchVnode(elmToMove, newStartVnode)</span><br><span class="line">                    oldCh[idxInOld] = <span class="literal">null</span></span><br><span class="line">                    api.insertBefore(parentElm, elmToMove.el, oldStartVnode.el)</span><br><span class="line">                &#125;</span><br><span class="line">                newStartVnode = newCh[++newStartIdx]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (oldStartIdx &gt; oldEndIdx) &#123;</span><br><span class="line">        before = newCh[newEndIdx + <span class="number">1</span>] == <span class="literal">null</span> ? <span class="literal">null</span> : newCh[newEndIdx + <span class="number">1</span>].el</span><br><span class="line">        addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx)</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (newStartIdx &gt; newEndIdx) &#123;</span><br><span class="line">        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先说一下这个函数做了什么</p><ul><li>将Vnode的子节点Vch和oldVnode的子节点oldCh提取出来</li><li>oldCh和vCh各有两个头尾的变量StartIdx和EndIdx，它们的2个变量相互比较，一共有4种比较方式。如果4种比较都没匹配，如果设置了key，就会用key进行比较，在比较的过程中，变量会往中间靠，一旦StartIdx&gt;EndIdx表明oldCh和vCh至少有一个已经遍历完了，就会结束比较。</li></ul><h1 id="图解updateChildren"><a href="#图解updateChildren" class="headerlink" title="图解updateChildren"></a>图解updateChildren</h1><p>终于来到了这一部分，上面的总结相信很多人也看得一脸懵逼，下面我们好好说道说道。<br><img src="/img/updateChildren.png" ><br>现在分别对oldS、oldE、S、E两两做sameVnode比较，有四种比较方式，当其中两个能匹配上那么真实dom中的相应节点会移到Vnode相应的位置，这句话有点绕，打个比方</p><ul><li>如果是oldS和E匹配上了，那么真实dom中的第一个节点会移到最后</li><li>如果是oldE和S匹配上了，那么真实dom中的最后一个节点会移到最前，匹配上的两个指针向中间移动</li><li>如果四种匹配没有一对是成功的，那么遍历oldChild，S挨个和他们匹配，匹配成功就在真实dom中将成功的节点移到最前面，如果依旧没有成功的，那么将S对应的节点插入到dom中对应的oldS位置，oldS和S指针向中间移动。<img src="/img/sameVnode.png"></li></ul><p>第一步</p><pre><code>oldS = a, oldE = d；S = a, E = b;</code></pre><p>oldS和S匹配，则将dom中的a节点放到第一个，已经是第一个了就不管了，此时dom的位置为：a b d<br>第二步</p><pre><code>oldS = b, oldE = d；S = c, E = b;</code></pre><p>oldS和E匹配，就将原本的b节点移动到最后，因为E是最后一个节点，他们位置要一致，这就是上面说的：当其中两个能匹配上那么真实dom中的相应节点会移到Vnode相应的位置，此时dom的位置为：a d b<br>第三步</p><pre><code>oldS = d, oldE = d；S = c, E = d;</code></pre><p>oldE和E匹配，位置不变此时dom的位置为：a d b<br>第四步</p><pre><code>oldS++;oldE--;oldS &gt; oldE;</code></pre><p>遍历结束，说明oldCh先遍历完。就将剩余的vCh节点根据自己的的index插入到真实dom中去，此时dom位置为：a c d b<br>一次模拟完成。<br>这个匹配过程的结束有两个条件：</p><ul><li>oldS &gt; oldE表示oldCh先遍历完，那么就将多余的vCh根据index添加到dom中去（如上图）</li><li>S &gt; E表示vCh先遍历完，那么就在真实dom中将区间为[oldS, oldE]的多余节点删掉</li></ul><img src="/img/dom.png"><p>下面再举一个例子，可以像上面那样自己试着模拟一下<br><img src="/img/dom1.png"></p><p>当这些节点sameVnode成功后就会紧接着执行patchVnode了，可以看一下上面的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (sameVnode(oldStartVnode, newStartVnode)) &#123;</span><br><span class="line">    patchVnode(oldStartVnode, newStartVnode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就这样层层递归下去，直到将oldVnode和Vnode中的所有子节点比对完。也将dom的所有补丁都打好啦。那么现在再回过去看updateChildren的代码会不会容易很多呢？</p>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://zhanghuaxiao.github.io/2019/01/30/vue-source-code/&quot;&gt;可以先看Vuejs运行机制&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="vue的diff算法" scheme="https://zhanghuaxiao.github.io/tags/vue%E7%9A%84diff%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js 内部运行机制</title>
    <link href="https://zhanghuaxiao.github.io/2019/01/30/vue-source-code/"/>
    <id>https://zhanghuaxiao.github.io/2019/01/30/vue-source-code/</id>
    <published>2019-01-30T03:37:58.000Z</published>
    <updated>2019-01-30T06:35:13.150Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>生活的全部意义在于无穷地探索尚未知道的东西，在于不断地增加更多的知识。————左拉 </p></blockquote><img src='/img/curious.jpg'><span id="more"></span>[原文地址](https://juejin.im/book/5a36661851882538e2259c0f/section/5a37bbb35188257d167a4d64)# 全局概览这一节笔者将为大家介绍一下 Vue.js 内部的整个流程，希望能让大家对全局有一个整体的印象，然后我们再来逐个模块进行讲解。从来没有了解过 Vue.js 实现的同学可能会对一些内容感到疑惑，这是很正常的，这一节的目的主要是为了让大家对整个流程有一个大概的认识，算是一个概览预备的过程，当把整本小册认真读完以后，再来阅读这一节，相信会有收获的。<p>首先我们来看一下笔者画的内部流程图。<br><img src="/img/vuejsfrist.png" class="full-image"><br>大家第一次看到这个图一定是一头雾水的，没有关系，我们来逐个讲一下这些模块的作用以及调用关系。相信讲完之后大家对Vue.js内部运行机制会有一个大概的认识。</p><h1 id="初始化及挂载"><a href="#初始化及挂载" class="headerlink" title="初始化及挂载"></a>初始化及挂载</h1><img src="/img/vuejs2.png" class="full-image">在 new Vue() 之后。 Vue 会调用 _init 函数进行初始化，也就是这里的 init 过程，它会初始化生命周期、事件、 props、 methods、 data、 computed 与 watch 等。其中最重要的是通过 Object.defineProperty 设置 setter 与 getter 函数，用来实现「响应式」以及「依赖收集」，后面会详细讲到，这里只要有一个印象即可。<p>初始化之后调用 $mount 会挂载组件，如果是运行时编译，即不存在 render function 但是存在 template 的情况，需要进行「编译」步骤。</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>compile编译可以分成 parse、optimize 与 generate 三个阶段，最终需要得到 render function。<br><img src="/img/vuejs3.png" class="full-image"></p><h2 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h2><p>parse 会用正则等方式解析 template 模板中的指令、class、style等数据，形成AST。</p><h2 id="optimize"><a href="#optimize" class="headerlink" title="optimize"></a>optimize</h2><p>optimize 的主要作用是标记 static 静态节点，这是 Vue 在编译过程中的一处优化，后面当 update 更新界面时，会有一个 patch 的过程， <a href="https://zhanghuaxiao.github.io/2019/01/30/vue-diff%E7%AE%97%E6%B3%95/#more">diff</a> 算法会直接跳过静态节点，从而减少了比较的过程，优化了 patch 的性能。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><p>generate 是将 AST 转化成 render function 字符串的过程，得到结果是 render 的字符串以及 staticRenderFns 字符串。</p><p>在经历过 parse、optimize 与 generate 这三个阶段以后，组件中就会存在渲染 VNode 所需的 render function 了。</p><h1 id="响应式"><a href="#响应式" class="headerlink" title="响应式"></a>响应式</h1><p>接下来也就是 Vue.js 响应式核心部分。<br><img src="/img/vuejs4.png" class="full-image"></p><p>这里的 getter 跟 setter 已经在之前介绍过了，在 init 的时候通过 Object.defineProperty 进行了绑定，它使得当被设置的对象被读取的时候会执行 getter 函数，而在当被赋值的时候会执行 setter 函数。</p><p>当 render function 被渲染的时候，因为会读取所需对象的值，所以会触发 getter 函数进行「依赖收集」，「依赖收集」的目的是将观察者 Watcher 对象存放到当前闭包中的订阅者 Dep 的 subs 中。形成如下所示的这样一个关系。<br><img src="/img/vuejs5.png" class="full-image"></p><p>在修改对象的值的时候，会触发对应的 setter， setter 通知之前「依赖收集」得到的 Dep 中的每一个 Watcher，告诉它们自己的值改变了，需要重新渲染视图。这时候这些 Watcher 就会开始调用 update 来更新视图，当然这中间还有一个 patch 的过程以及使用队列来异步更新的策略，这个我们后面再讲。</p><h1 id="Virtual-DOM"><a href="#Virtual-DOM" class="headerlink" title="Virtual DOM"></a>Virtual DOM</h1><p>我们知道，render function 会被转化成 VNode 节点。Virtual DOM 其实就是一棵以 JavaScript 对象（ VNode 节点）作为基础的树，用对象属性来描述节点，实际上它只是一层对真实 DOM 的抽象。最终可以通过一系列操作使这棵树映射到真实环境上。由于 Virtual DOM 是以 JavaScript 对象为基础而不依赖真实平台环境，所以使它具有了跨平台的能力，比如说浏览器平台、Weex、Node 等。</p><p>比如说下面这样一个例子：</p><pre><code>&#123;    tag: &#39;div&#39;,                 /*说明这是一个div标签*/    children: [                 /*存放该标签的子节点*/        &#123;            tag: &#39;a&#39;,           /*说明这是一个a标签*/            text: &#39;click me&#39;    /*标签的内容*/        &#125;    ]&#125;</code></pre><p>渲染后可以得到</p><pre><code>&lt;div&gt;    &lt;a&gt;click me&lt;/a&gt;&lt;/div&gt;</code></pre><p>这只是一个简单的例子，实际上的节点有更多的属性来标志节点，比如 isStatic （代表是否为静态节点）、 isComment （代表是否为注释节点）等。</p><h1 id="更新视图"><a href="#更新视图" class="headerlink" title="更新视图"></a>更新视图</h1><img src="/img/vuejs6.png" class="full-image">前面我们说到，在修改一个对象值的时候，会通过 setter -> Watcher -> update 的流程来修改对应的视图，那么最终是如何更新视图的呢？<p>当数据变化后，执行 render function 就可以得到一个新的 VNode 节点，我们如果想要得到新的视图，最简单粗暴的方法就是直接解析这个新的 VNode 节点，然后用 innerHTML 直接全部渲染到真实 DOM 中。但是其实我们只对其中的一小块内容进行了修改，这样做似乎有些「浪费」。</p><p>那么我们为什么不能只修改那些「改变了的地方」呢？这个时候就要介绍我们的「patch」了。我们会将新的 VNode 与旧的 VNode 一起传入 patch 进行比较，经过 diff 算法得出它们的「差异」。最后我们只需要将这些「差异」的对应 DOM 进行修改即可。</p><h1 id="再看全局"><a href="#再看全局" class="headerlink" title="再看全局"></a>再看全局</h1><img src="/img/vuejs7.png" class="full-image">回过头再来看看这张图，是不是大脑中已经有一个大概的脉络了呢？]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;生活的全部意义在于无穷地探索尚未知道的东西，在于不断地增加更多的知识。————左拉 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&#39;/img/curious.jpg&#39;&gt;</summary>
    
    
    
    <category term="web" scheme="https://zhanghuaxiao.github.io/categories/web/"/>
    
    
    <category term="Vue.js 内部运行机制" scheme="https://zhanghuaxiao.github.io/tags/Vue-js-%E5%86%85%E9%83%A8%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6/"/>
    
    <category term="patch" scheme="https://zhanghuaxiao.github.io/tags/patch/"/>
    
    <category term="render function" scheme="https://zhanghuaxiao.github.io/tags/render-function/"/>
    
    <category term="diff" scheme="https://zhanghuaxiao.github.io/tags/diff/"/>
    
  </entry>
  
</feed>
